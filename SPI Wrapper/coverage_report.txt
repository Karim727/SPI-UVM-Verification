Coverage Report by instance with details

=================================================================================
=== Instance: /top/RAMif
=== Design Unit: work.RAM_if
=================================================================================
Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                         62        62         0   100.00%

================================Toggle Details================================

Toggle Coverage for instance /top/RAMif --

                                              Node      1H->0L      0L->1H  "Coverage"
                                              ---------------------------------------
                                               clk           1           1      100.00 
                                          din[9-0]           1           1      100.00 
                                         dout[7-0]           1           1      100.00 
                                     dout_ref[7-0]           1           1      100.00 
                                             rst_n           1           1      100.00 
                                          rx_valid           1           1      100.00 
                                          tx_valid           1           1      100.00 
                                      tx_valid_ref           1           1      100.00 

Total Node Count     =         31 
Toggled Node Count   =         31 
Untoggled Node Count =          0 

Toggle Coverage      =     100.00% (62 of 62 bins)

=================================================================================
=== Instance: /top/golden_model_ram
=== Design Unit: work.RAM_golden
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         9         8         1    88.88%

================================Branch Details================================

Branch Coverage for instance /top/golden_model_ram

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File ../RAM/RAM_golden.v
------------------------------------IF Branch------------------------------------
    10                                       670     Count coming in to IF
    10              1                         31         if(~rst_n) begin
    16              1                        639         else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    18                                       639     Count coming in to IF
    18              1                        370             if(rx_valid) begin
                                             269     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    19                                       370     Count coming in to IF
    19              1                        112                 if (din[9:8] == 2'b00) // write address
    22              1                         61                 else if (din[9:8] == 2'b01) // write data
    25              1                         73                 else if(din[9:8] == 2'b10) // read address
    27              1                        124                 else if (din[9:8] == 2'b11) begin // read data
                                         ***0***     All False Count
Branch totals: 4 hits of 5 branches = 80.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       4         3         1    75.00%

================================Condition Details================================

Condition Coverage for instance /top/golden_model_ram --

  File ../RAM/RAM_golden.v
----------------Focused Condition View-------------------
Line       19 Item    1  (din[9:8] == 0)
Condition totals: 1 of 1 input term covered = 100.00%

       Input Term   Covered  Reason for no coverage   Hint
      -----------  --------  -----------------------  --------------
  (din[9:8] == 0)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (din[9:8] == 0)_0     -                             
  Row   2:          1  (din[9:8] == 0)_1     -                             

----------------Focused Condition View-------------------
Line       22 Item    1  (din[9:8] == 1)
Condition totals: 1 of 1 input term covered = 100.00%

       Input Term   Covered  Reason for no coverage   Hint
      -----------  --------  -----------------------  --------------
  (din[9:8] == 1)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (din[9:8] == 1)_0     -                             
  Row   2:          1  (din[9:8] == 1)_1     -                             

----------------Focused Condition View-------------------
Line       25 Item    1  (din[9:8] == 2)
Condition totals: 1 of 1 input term covered = 100.00%

       Input Term   Covered  Reason for no coverage   Hint
      -----------  --------  -----------------------  --------------
  (din[9:8] == 2)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (din[9:8] == 2)_0     -                             
  Row   2:          1  (din[9:8] == 2)_1     -                             

----------------Focused Condition View-------------------
Line       27 Item    1  (din[9:8] == 3)
Condition totals: 0 of 1 input term covered = 0.00%

       Input Term   Covered  Reason for no coverage   Hint
      -----------  --------  -----------------------  --------------
  (din[9:8] == 3)         N  '_0' not hit             Hit '_0'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (din[9:8] == 3)_0     -                             
  Row   2:          1  (din[9:8] == 3)_1     -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      11        11         0   100.00%

================================Statement Details================================

Statement Coverage for instance /top/golden_model_ram --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File ../RAM/RAM_golden.v
    1                                                module RAM_golden(din,clk,rst_n,rx_valid,dout,tx_valid);
    2                                                parameter MEM_DEPTH=256,ADDR_SIZE=8;
    3                                                input clk,rst_n,rx_valid;
    4                                                input [9:0] din;
    5                                                output reg [7:0] dout;
    6                                                output reg tx_valid;
    7                                                reg [7:0] mem [255:0];
    8                                                reg [7:0] addr_wr,addr_rd;
    9               1                        670     always @(posedge clk) begin
    10                                                   if(~rst_n) begin
    11              1                         31             dout<=0;
    12              1                         31             tx_valid<=0;
    13              1                         31             addr_wr<=0;
    14              1                         31             addr_rd<=0;
    15                                                   end
    16                                                   else begin
    17              1                        639             tx_valid<=0;
    18                                                       if(rx_valid) begin
    19                                                           if (din[9:8] == 2'b00) // write address
    20              1                        112                     addr_wr <= din[7:0];
    21                                               
    22                                                           else if (din[9:8] == 2'b01) // write data
    23              1                         61                     mem[addr_wr] <= din[7:0];
    24                                               
    25                                                           else if(din[9:8] == 2'b10) // read address
    26              1                         73                     addr_rd <= din[7:0];
    27                                                           else if (din[9:8] == 2'b11) begin // read data
    28              1                        124                     dout <= mem[addr_rd];
    29              1                        124                     tx_valid <= 1;

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                         76        76         0   100.00%

================================Toggle Details================================

Toggle Coverage for instance /top/golden_model_ram --

                                              Node      1H->0L      0L->1H  "Coverage"
                                              ---------------------------------------
                                      addr_rd[7-0]           1           1      100.00 
                                      addr_wr[7-0]           1           1      100.00 
                                               clk           1           1      100.00 
                                          din[0-9]           1           1      100.00 
                                         dout[7-0]           1           1      100.00 
                                             rst_n           1           1      100.00 
                                          rx_valid           1           1      100.00 
                                          tx_valid           1           1      100.00 

Total Node Count     =         38 
Toggled Node Count   =         38 
Untoggled Node Count =          0 

Toggle Coverage      =     100.00% (76 of 76 bins)

=================================================================================
=== Instance: /top/SPIif
=== Design Unit: work.SPI_if
=================================================================================
Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                         80        58        22    72.50%

================================Toggle Details================================

Toggle Coverage for instance /top/SPIif --

                                              Node      1H->0L      0L->1H  "Coverage"
                                              ---------------------------------------
                                              MISO           1           1      100.00 
                                          MISO_exp           0           0        0.00 
                                              MOSI           1           1      100.00 
                                              SS_n           1           1      100.00 
                                               clk           1           1      100.00 
                                           cs[2-0]           1           1      100.00 
                                             rst_n           1           1      100.00 
                                      rx_data[9-0]           1           1      100.00 
                                  rx_data_exp[9-0]           1           1      100.00 
                                          rx_valid           0           0        0.00 
                                      rx_valid_exp           1           1      100.00 
                                      tx_data[7-0]           0           0        0.00 
                                          tx_valid           0           0        0.00 

Total Node Count     =         40 
Toggled Node Count   =         29 
Untoggled Node Count =         11 

Toggle Coverage      =      72.50% (58 of 80 bins)

=================================================================================
=== Instance: /top/golden_model_spi
=== Design Unit: work.SPI
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        42        37         5    88.09%

================================Branch Details================================

Branch Coverage for instance /top/golden_model_spi

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File ../SPI/SPI.v
------------------------------------IF Branch------------------------------------
    14                                       822     Count coming in to IF
    14              1                         31         if(~rst_n) 
    16              1                        791         else
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    20                                      2940     Count coming in to IF
    20              1                         31         if(~rst_n) begin
    26              1                       2909         else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    27                                      2909     Count coming in to IF
    27              1                        206             if(cs==IDLE)
                                            2703     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    29                                      2909     Count coming in to IF
    29              1                        204             if(cs==CHK_CMD)
                                            2705     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    31                                      2909     Count coming in to IF
    31              1                       1269             if(cs==WRITE || cs==READ_ADD) begin
    42              1                       1230             else if(cs==READ_DATA) begin
                                             410     All False Count
Branch totals: 3 hits of 3 branches = 100.00%

------------------------------------IF Branch------------------------------------
    32                                      1269     Count coming in to IF
    32              1                       1053                 if (count > 0) begin
    36              1                        216                     else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    39                                       216     Count coming in to IF
    39              1                          2                         if(cs==READ_ADD) flag <=0;
                                             214     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    43                                      1230     Count coming in to IF
    43              1                    ***0***                 if (tx_valid) begin
    53              1                       1230                     else begin
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    45                                   ***0***     Count coming in to IF
    45              1                    ***0***                         if (count > 0) begin
    49              1                    ***0***                         else begin
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    54                                      1230     Count coming in to IF
    54              1                       1129                         if (count > 0) begin
    58              1                        101                         else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------CASE Branch------------------------------------
    68                                      1910     Count coming in to CASE
    69              1                        401             IDLE:
    74              1                        285             CHK_CMD:
    89              1                        633             WRITE:
    94              1                          7             READ_ADD:
    99              1                        582             READ_DATA:
    104             1                          2             default: ns=IDLE;
Branch totals: 6 hits of 6 branches = 100.00%

------------------------------------IF Branch------------------------------------
    70                                       401     Count coming in to IF
    70              1                        178             if(SS_n)
    72              1                        223             else
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    75                                       285     Count coming in to IF
    75              1                    ***0***             if(SS_n)
    77              1                        285             else begin
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    78                                       285     Count coming in to IF
    78              1                        160                 if(~MOSI)
    80              1                        125                 else if(MOSI) begin
                                         ***0***     All False Count
Branch totals: 2 hits of 3 branches = 66.66%

------------------------------------IF Branch------------------------------------
    81                                       125     Count coming in to IF
    81              1                          1                     if(flag) begin
    84              1                        124                     else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    90                                       633     Count coming in to IF
    90              1                         96             if(SS_n)
    92              1                        537             else
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    95                                         7     Count coming in to IF
    95              1                          1             if(SS_n)
    97              1                          6             else
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    100                                      582     Count coming in to IF
    100             1                         81             if(SS_n)
    102             1                        501             else
Branch totals: 2 hits of 2 branches = 100.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       9         8         1    88.88%

================================Condition Details================================

Condition Coverage for instance /top/golden_model_spi --

  File ../SPI/SPI.v
----------------Focused Condition View-------------------
Line       27 Item    1  (cs == 0)
Condition totals: 1 of 1 input term covered = 100.00%

  Input Term   Covered  Reason for no coverage   Hint
 -----------  --------  -----------------------  --------------
   (cs == 0)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (cs == 0)_0           -                             
  Row   2:          1  (cs == 0)_1           -                             

----------------Focused Condition View-------------------
Line       29 Item    1  (cs == 1)
Condition totals: 1 of 1 input term covered = 100.00%

  Input Term   Covered  Reason for no coverage   Hint
 -----------  --------  -----------------------  --------------
   (cs == 1)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (cs == 1)_0           -                             
  Row   2:          1  (cs == 1)_1           -                             

----------------Focused Condition View-------------------
Line       31 Item    1  ((cs == 2) || (cs == 3))
Condition totals: 2 of 2 input terms covered = 100.00%

  Input Term   Covered  Reason for no coverage   Hint
 -----------  --------  -----------------------  --------------
   (cs == 2)         Y
   (cs == 3)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (cs == 2)_0           ~(cs == 3)                    
  Row   2:          1  (cs == 2)_1           -                             
  Row   3:          1  (cs == 3)_0           ~(cs == 2)                    
  Row   4:          1  (cs == 3)_1           ~(cs == 2)                    

----------------Focused Condition View-------------------
Line       32 Item    1  (count > 0)
Condition totals: 1 of 1 input term covered = 100.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (count > 0)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (count > 0)_0         -                             
  Row   2:          1  (count > 0)_1         -                             

----------------Focused Condition View-------------------
Line       39 Item    1  (cs == 3)
Condition totals: 1 of 1 input term covered = 100.00%

  Input Term   Covered  Reason for no coverage   Hint
 -----------  --------  -----------------------  --------------
   (cs == 3)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (cs == 3)_0           -                             
  Row   2:          1  (cs == 3)_1           -                             

----------------Focused Condition View-------------------
Line       42 Item    1  (cs == 4)
Condition totals: 1 of 1 input term covered = 100.00%

  Input Term   Covered  Reason for no coverage   Hint
 -----------  --------  -----------------------  --------------
   (cs == 4)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (cs == 4)_0           -                             
  Row   2:          1  (cs == 4)_1           -                             

----------------Focused Condition View-------------------
Line       45 Item    1  (count > 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (count > 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (count > 0)_0         -                             
  Row   2:    ***0***  (count > 0)_1         -                             

----------------Focused Condition View-------------------
Line       54 Item    1  (count > 0)
Condition totals: 1 of 1 input term covered = 100.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (count > 0)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (count > 0)_0         -                             
  Row   2:          1  (count > 0)_1         -                             


FSM Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    FSM States                       5         5         0   100.00%
    FSM Transitions                  8         8         0   100.00%

================================FSM Details================================

FSM Coverage for instance /top/golden_model_spi --

FSM_ID: cs
    Current State Object : cs
    ----------------------
    State Value MapInfo :
    ---------------------
Line          State Name               Value
----          ----------               -----
  69                IDLE                   0
  74             CHK_CMD                   1
  99           READ_DATA                   4
  94            READ_ADD                   3
  89               WRITE                   2
    Covered States :
    ----------------
                   State           Hit_count
                   -----           ---------
                    IDLE                 209          
                 CHK_CMD                 206          
               READ_DATA                 185          
                READ_ADD                   2          
                   WRITE                 220          
    Covered Transitions :
    ---------------------
Line            Trans_ID           Hit_count          Transition          
----            --------           ---------          ----------          
  73                   0                 206          IDLE -> CHK_CMD               
  85                   1                  93          CHK_CMD -> READ_DATA          
  82                   2                   1          CHK_CMD -> READ_ADD           
  79                   3                 110          CHK_CMD -> WRITE              
  76                   4                   1          CHK_CMD -> IDLE               
 101                   5                  93          READ_DATA -> IDLE             
  96                   6                   1          READ_ADD -> IDLE              
  91                   7                 110          WRITE -> IDLE                 


    Summary                       Bins      Hits    Misses  Coverage
    -------                       ----      ----    ------  --------
        FSM States                   5         5         0   100.00%
        FSM Transitions              8         8         0   100.00%
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      39        34         5    87.17%

================================Statement Details================================

Statement Coverage for instance /top/golden_model_spi --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File ../SPI/SPI.v
    1                                                module SPI(MOSI,SS_n,clk,rst_n,tx_data,tx_valid,MISO,rx_data,rx_valid);
    2                                                parameter IDLE=3'b000,CHK_CMD=3'b001,WRITE=3'b010,READ_ADD=3'b011,READ_DATA=3'b100;
    3                                                input MOSI,SS_n,clk,rst_n,tx_valid;
    4                                                input [7:0] tx_data;
    5                                                output reg MISO,rx_valid;
    6                                                output reg [9:0] rx_data;
    7                                                
    8                                                reg [9:0] MOSI_reg;
    9                                                reg [2:0]cs,ns;
    10                                               reg [3:0] count;
    11              1                          1     reg flag=1;
    12                                               
    13              1                        822     always @(posedge clk) begin
    14                                                   if(~rst_n) 
    15              1                         31             cs<=IDLE;
    16                                                   else
    17              1                        791             cs<=ns;
    18                                               end
    19              1                       2940     always @(posedge clk) begin
    20                                                   if(~rst_n) begin
    21              1                         31             rx_data<=0;
    22              1                         31             rx_valid<=0;
    23              1                         31             MISO<=0;
    24              1                         31             MOSI_reg <=0;
    25                                                   end
    26                                                   else begin
    27                                                       if(cs==IDLE)
    28              1                        206                 rx_valid<=0;
    29                                                       if(cs==CHK_CMD)
    30              1                        204                 count<=10;
    31                                                       if(cs==WRITE || cs==READ_ADD) begin
    32                                                           if (count > 0) begin
    33              1                       1053                         MOSI_reg[count-1] <= MOSI;
    34              1                       1053                         count <= count - 1;
    35                                                               end
    36                                                               else begin
    37              1                        216                         rx_data <= MOSI_reg;
    38              1                        216                         rx_valid <= 1;
    39              1                          2                         if(cs==READ_ADD) flag <=0;
    40                                                               end
    41                                                       end
    42                                                       else if(cs==READ_DATA) begin
    43                                                           if (tx_valid) begin
    44              1                    ***0***                         rx_valid <= 0;
    45                                                                   if (count > 0) begin
    46              1                    ***0***                             MISO <= tx_data[count-1];
    47              1                    ***0***                             count <= count - 1;
    48                                                                   end
    49                                                                   else begin
    50              1                    ***0***                             flag <= 1;
    51                                                                   end
    52                                                               end
    53                                                               else begin
    54                                                                   if (count > 0) begin
    55              1                       1129                             MOSI_reg[count-1] <= MOSI;
    56              1                       1129                             count <= count - 1;
    57                                                                   end
    58                                                                   else begin
    59              1                        101                             rx_data <= MOSI_reg;
    60              1                        101                             rx_valid <= 1;
    61              1                        101                             count <= 8;
    62                                                                   end
    63                                                               end
    64                                                       end            
    65                                                   end
    66                                               end
    67              1                       1910     always @(cs,SS_n,MOSI,flag) begin
    68                                                   case (cs)
    69                                                       IDLE:
    70                                                       if(SS_n)
    71              1                        178                 ns=IDLE;
    72                                                       else
    73              1                        223                 ns=CHK_CMD;
    74                                                       CHK_CMD:
    75                                                       if(SS_n)
    76              1                    ***0***                 ns=IDLE;
    77                                                       else begin
    78                                                           if(~MOSI)
    79              1                        160                     ns=WRITE;
    80                                                           else if(MOSI) begin
    81                                                               if(flag) begin
    82              1                          1                         ns=READ_ADD;
    83                                                               end
    84                                                               else begin
    85              1                        124                         ns=READ_DATA;
    86                                                               end
    87                                                           end
    88                                                       end
    89                                                       WRITE:
    90                                                       if(SS_n)
    91              1                         96                 ns=IDLE;
    92                                                       else
    93              1                        537                 ns=WRITE;
    94                                                       READ_ADD:
    95                                                       if(SS_n)
    96              1                          1                 ns=IDLE;
    97                                                       else
    98              1                          6                 ns=READ_ADD;
    99                                                       READ_DATA:
    100                                                      if(SS_n)
    101             1                         81                 ns=IDLE;
    102                                                      else
    103             1                        501                 ns=READ_DATA;            
    104             1                          2             default: ns=IDLE;

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                         92        71        21    77.17%

================================Toggle Details================================

Toggle Coverage for instance /top/golden_model_spi --

                                              Node      1H->0L      0L->1H  "Coverage"
                                              ---------------------------------------
                                              MISO           0           0        0.00 
                                              MOSI           1           1      100.00 
                                     MOSI_reg[9-0]           1           1      100.00 
                                              SS_n           1           1      100.00 
                                               clk           1           1      100.00 
                                        count[3-0]           1           1      100.00 
                                           cs[2-0]           1           1      100.00 
                                              flag           1           0       50.00 
                                           ns[2-0]           1           1      100.00 
                                             rst_n           1           1      100.00 
                                      rx_data[9-0]           1           1      100.00 
                                          rx_valid           1           1      100.00 
                                      tx_data[0-7]           0           0        0.00 
                                          tx_valid           0           0        0.00 

Total Node Count     =         46 
Toggled Node Count   =         35 
Untoggled Node Count =         11 

Toggle Coverage      =      77.17% (71 of 92 bins)

=================================================================================
=== Instance: /top/WRAPPERif
=== Design Unit: work.WRAPPER_if
=================================================================================
Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                         50        50         0   100.00%

================================Toggle Details================================

Toggle Coverage for instance /top/WRAPPERif --

                                              Node      1H->0L      0L->1H  "Coverage"
                                              ---------------------------------------
                                              MISO           1           1      100.00 
                                              MOSI           1           1      100.00 
                                              SS_n           1           1      100.00 
                                               clk           1           1      100.00 
                                             rst_n           1           1      100.00 
                                  rx_data_din[9-0]           1           1      100.00 
                                          rx_valid           1           1      100.00 
                                 tx_data_dout[7-0]           1           1      100.00 
                                          tx_valid           1           1      100.00 

Total Node Count     =         25 
Toggled Node Count   =         25 
Untoggled Node Count =          0 

Toggle Coverage      =     100.00% (50 of 50 bins)

=================================================================================
=== Instance: /top/DUT/SLAVE_instance
=== Design Unit: work.SLAVE
=================================================================================

Assertion Coverage:
    Assertions                       7         6         1    85.71%
--------------------------------------------------------------------
Name                 File(Line)                   Failure      Pass 
                                                  Count        Count
--------------------------------------------------------------------
/top/DUT/SLAVE_instance/a_reset
                     ../SPI/SPI_slave.sv(167)           0          0
/top/DUT/SLAVE_instance/ap_1
                     ../SPI/SPI_slave.sv(168)           0          1
/top/DUT/SLAVE_instance/ap_2
                     ../SPI/SPI_slave.sv(170)           0          1
/top/DUT/SLAVE_instance/ap_3
                     ../SPI/SPI_slave.sv(172)           0          1
/top/DUT/SLAVE_instance/ap_4
                     ../SPI/SPI_slave.sv(174)           0          1
/top/DUT/SLAVE_instance/ap_5
                     ../SPI/SPI_slave.sv(176)           0          1
/top/DUT/SLAVE_instance/ap_6
                     ../SPI/SPI_slave.sv(178)           0          1
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        41        37         4    90.24%

================================Branch Details================================

Branch Coverage for instance /top/DUT/SLAVE_instance

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File ../SPI/SPI_slave.sv
------------------------------------IF Branch------------------------------------
    15                                       822     Count coming in to IF
    15              1                         31         if (~rst_n) begin
    18              1                        791         else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------CASE Branch------------------------------------
    24                                      1921     Count coming in to CASE
    25              1                        404             IDLE : begin
    31              1                        285             CHK_CMD : begin
    45              1                        633             WRITE : begin
    51              1                        193             READ_ADD : begin
    57              1                        405             READ_DATA : begin
                                               1     All False Count
Branch totals: 6 hits of 6 branches = 100.00%

------------------------------------IF Branch------------------------------------
    26                                       404     Count coming in to IF
    26              1                        178                 if (SS_n)
    28              1                        226                 else
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    32                                       285     Count coming in to IF
    32              1                    ***0***                 if (SS_n)
    34              1                        285                 else begin
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    35                                       285     Count coming in to IF
    35              1                        160                     if (~MOSI)
    37              1                        125                     else if(MOSI) begin ////else only is wrong if mosi is x -> bug here
                                         ***0***     All False Count
Branch totals: 2 hits of 3 branches = 66.66%

------------------------------------IF Branch------------------------------------
    38                                       125     Count coming in to IF
    38              1                         42                         if (~received_address)// was received address -> bug here
    40              1                         83                         else
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    46                                       633     Count coming in to IF
    46              1                         96                 if (SS_n)
    48              1                        537                 else
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    52                                       193     Count coming in to IF
    52              1                         24                 if (SS_n)
    54              1                        169                 else
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    58                                       405     Count coming in to IF
    58              1                         58                 if (SS_n)
    60              1                        347                 else
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    67                                      2911     Count coming in to IF
    67              1                         31         if (~rst_n) begin 
    74              1                       2880         else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------CASE Branch------------------------------------
    75                                      2880     Count coming in to CASE
    76              1                        206                 IDLE : begin
    79              1                        204                 CHK_CMD : begin
    82              1                       1258                 WRITE : begin
    92              1                        333                 READ_ADD : begin
    103             1                        879                 READ_DATA : begin
                                         ***0***     All False Count
Branch totals: 5 hits of 6 branches = 83.33%

------------------------------------IF Branch------------------------------------
    83                                      1258     Count coming in to IF
    83              1                       1043                     if (counter > 0) begin
    87              1                        215                     else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    93                                       333     Count coming in to IF
    93              1                        272                     if (counter > 0) begin
    97              1                         61                     else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    104                                      879     Count coming in to IF
    104             1                         15                     if (tx_valid) begin
    114             1                        864                     else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    106                                       15     Count coming in to IF
    106             1                         15                         if (counter > 0) begin
    110             1                    ***0***                         else begin
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    115                                      864     Count coming in to IF
    115             1                        792                         if (counter > 0) begin
    119             1                         72                         else begin
Branch totals: 2 hits of 2 branches = 100.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       4         3         1    75.00%

================================Condition Details================================

Condition Coverage for instance /top/DUT/SLAVE_instance --

  File ../SPI/SPI_slave.sv
----------------Focused Condition View-------------------
Line       83 Item    1  (counter > 0)
Condition totals: 1 of 1 input term covered = 100.00%

     Input Term   Covered  Reason for no coverage   Hint
    -----------  --------  -----------------------  --------------
  (counter > 0)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (counter > 0)_0       -                             
  Row   2:          1  (counter > 0)_1       -                             

----------------Focused Condition View-------------------
Line       93 Item    1  (counter > 0)
Condition totals: 1 of 1 input term covered = 100.00%

     Input Term   Covered  Reason for no coverage   Hint
    -----------  --------  -----------------------  --------------
  (counter > 0)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (counter > 0)_0       -                             
  Row   2:          1  (counter > 0)_1       -                             

----------------Focused Condition View-------------------
Line       106 Item    1  (counter > 0)
Condition totals: 0 of 1 input term covered = 0.00%

     Input Term   Covered  Reason for no coverage   Hint
    -----------  --------  -----------------------  --------------
  (counter > 0)         N  '_0' not hit             Hit '_0'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (counter > 0)_0       -                             
  Row   2:          1  (counter > 0)_1       -                             

----------------Focused Condition View-------------------
Line       115 Item    1  (counter > 0)
Condition totals: 1 of 1 input term covered = 100.00%

     Input Term   Covered  Reason for no coverage   Hint
    -----------  --------  -----------------------  --------------
  (counter > 0)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (counter > 0)_0       -                             
  Row   2:          1  (counter > 0)_1       -                             



Directive Coverage:
    Directives                       6         6         0   100.00%

DIRECTIVE COVERAGE:
--------------------------------------------------------------------------------------------
Name                                     Design Design   Lang File(Line)      Hits Status    
                                         Unit   UnitType                                     
--------------------------------------------------------------------------------------------
/top/DUT/SLAVE_instance/cp_1             SLAVE  Verilog  SVA  ../SPI/SPI_slave.sv(169)
                                                                               153 Covered   
/top/DUT/SLAVE_instance/cp_2             SLAVE  Verilog  SVA  ../SPI/SPI_slave.sv(171)
                                                                               204 Covered   
/top/DUT/SLAVE_instance/cp_3             SLAVE  Verilog  SVA  ../SPI/SPI_slave.sv(173)
                                                                               203 Covered   
/top/DUT/SLAVE_instance/cp_4             SLAVE  Verilog  SVA  ../SPI/SPI_slave.sv(175)
                                                                              1124 Covered   
/top/DUT/SLAVE_instance/cp_5             SLAVE  Verilog  SVA  ../SPI/SPI_slave.sv(177)
                                                                               278 Covered   
/top/DUT/SLAVE_instance/cp_6             SLAVE  Verilog  SVA  ../SPI/SPI_slave.sv(179)
                                                                               757 Covered   
FSM Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    FSM States                       5         5         0   100.00%
    FSM Transitions                  8         8         0   100.00%

================================FSM Details================================

FSM Coverage for instance /top/DUT/SLAVE_instance --

FSM_ID: cs
    Current State Object : cs
    ----------------------
    State Value MapInfo :
    ---------------------
Line          State Name               Value
----          ----------               -----
  25                IDLE                   0
  31             CHK_CMD                   1
  57           READ_DATA                   4
  51            READ_ADD                   3
  45               WRITE                   2
    Covered States :
    ----------------
                   State           Hit_count
                   -----           ---------
                    IDLE                 209          
                 CHK_CMD                 206          
               READ_DATA                 130          
                READ_ADD                  57          
                   WRITE                 220          
    Covered Transitions :
    ---------------------
Line            Trans_ID           Hit_count          Transition          
----            --------           ---------          ----------          
  29                   0                 206          IDLE -> CHK_CMD               
  41                   1                  65          CHK_CMD -> READ_DATA          
  39                   2                  29          CHK_CMD -> READ_ADD           
  36                   3                 110          CHK_CMD -> WRITE              
  33                   4                   1          CHK_CMD -> IDLE               
  59                   5                  65          READ_DATA -> IDLE             
  53                   6                  29          READ_ADD -> IDLE              
  47                   7                 110          WRITE -> IDLE                 


    Summary                       Bins      Hits    Misses  Coverage
    -------                       ----      ----    ------  --------
        FSM States                   5         5         0   100.00%
        FSM Transitions              8         8         0   100.00%
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      42        40         2    95.23%

================================Statement Details================================

Statement Coverage for instance /top/DUT/SLAVE_instance --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File ../SPI/SPI_slave.sv
    2                                                module SLAVE (MOSI,MISO,SS_n,clk,rst_n,rx_data,rx_valid,tx_data,tx_valid);
    3                                                
    4                                                input            MOSI, clk, rst_n, SS_n, tx_valid;
    5                                                input      [7:0] tx_data;
    6                                                output reg [9:0] rx_data;
    7                                                output reg       rx_valid, MISO;
    8                                                
    9                                                reg [3:0] counter;
    10                                               reg       received_address;
    11                                               reg [9:0] MOSI_reg;
    12                                               reg [2:0]  ns; //cs,
    13                                               
    14              1                        822     always @(posedge clk) begin
    15                                                   if (~rst_n) begin
    16              1                         31             cs <= IDLE;
    17                                                   end
    18                                                   else begin
    19              1                        791             cs <= ns;
    20                                                   end
    21                                               end
    22                                               
    23              1                       1921     always @(*) begin
    24                                                   case (cs)
    25                                                       IDLE : begin
    26                                                           if (SS_n)
    27              1                        178                     ns = IDLE;
    28                                                           else
    29              1                        226                     ns = CHK_CMD;
    30                                                       end
    31                                                       CHK_CMD : begin
    32                                                           if (SS_n)
    33              1                    ***0***                     ns = IDLE;
    34                                                           else begin
    35                                                               if (~MOSI)
    36              1                        160                         ns = WRITE;
    37                                                               else if(MOSI) begin ////else only is wrong if mosi is x -> bug here
    38                                                                   if (~received_address)// was received address -> bug here
    39              1                         42                             ns = READ_ADD; 
    40                                                                   else
    41              1                         83                             ns = READ_DATA;
    42                                                               end
    43                                                           end
    44                                                       end
    45                                                       WRITE : begin
    46                                                           if (SS_n)
    47              1                         96                     ns = IDLE;
    48                                                           else
    49              1                        537                     ns = WRITE;
    50                                                       end
    51                                                       READ_ADD : begin
    52                                                           if (SS_n)
    53              1                         24                     ns = IDLE;
    54                                                           else
    55              1                        169                     ns = READ_ADD;
    56                                                       end
    57                                                       READ_DATA : begin
    58                                                           if (SS_n)
    59              1                         58                     ns = IDLE;
    60                                                           else
    61              1                        347                     ns = READ_DATA;
    62                                                       end
    63                                                   endcase
    64                                               end
    65                                               
    66              1                       2911     always @(posedge clk) begin
    67                                                   if (~rst_n) begin 
    68              1                         31             rx_data <= 0;
    69              1                         31             rx_valid <= 0;
    70              1                         31             received_address <= 0;
    71              1                         31             MOSI_reg <= 0;
    72              1                         31             MISO <= 0;
    73                                                   end
    74                                                   else begin
    75                                                       case (cs)
    76                                                           IDLE : begin
    77              1                        206                     rx_valid <= 0;
    78                                                           end
    79                                                           CHK_CMD : begin
    80              1                        204                     counter <= 10;      
    81                                                           end
    82                                                           WRITE : begin
    83                                                               if (counter > 0) begin
    84              1                       1043                         MOSI_reg[counter-1] <= MOSI;
    85              1                       1043                         counter <= counter - 1;
    86                                                               end
    87                                                               else begin
    88              1                        215                         rx_data <= MOSI_reg;
    89              1                        215                         rx_valid <= 1;
    90                                                               end
    91                                                           end
    92                                                           READ_ADD : begin
    93                                                               if (counter > 0) begin
    94              1                        272                         MOSI_reg[counter-1] <= MOSI;
    95              1                        272                         counter <= counter - 1;
    96                                                               end
    97                                                               else begin
    98              1                         61                         rx_data <= MOSI_reg;
    99              1                         61                         rx_valid <= 1;
    100             1                         61                         received_address <= 1;
    101                                                              end
    102                                                          end
    103                                                          READ_DATA : begin
    104                                                              if (tx_valid) begin
    105             1                         15                         rx_valid <= 0;
    106                                                                  if (counter > 0) begin
    107             1                         15                             MISO <= tx_data[counter-1];
    108             1                         15                             counter <= counter - 1;
    109                                                                  end
    110                                                                  else begin
    111             1                    ***0***                             received_address <= 0;
    112                                                                  end
    113                                                              end
    114                                                              else begin
    115                                                                  if (counter > 0) begin
    116             1                        792                             MOSI_reg[counter-1] <= MOSI;
    117             1                        792                             counter <= counter - 1;
    118                                                                  end
    119                                                                  else begin
    120             1                         72                             rx_data <= MOSI_reg;
    121             1                         72                             rx_valid <= 1;
    122             1                         72                             counter <= 8;

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                         86        86         0   100.00%

================================Toggle Details================================

Toggle Coverage for instance /top/DUT/SLAVE_instance --

                                              Node      1H->0L      0L->1H  "Coverage"
                                              ---------------------------------------
                                              MISO           1           1      100.00 
                                              MOSI           1           1      100.00 
                                     MOSI_reg[9-0]           1           1      100.00 
                                              SS_n           1           1      100.00 
                                               clk           1           1      100.00 
                                      counter[3-0]           1           1      100.00 
                                           ns[2-0]           1           1      100.00 
                                  received_address           1           1      100.00 
                                             rst_n           1           1      100.00 
                                      rx_data[9-0]           1           1      100.00 
                                          rx_valid           1           1      100.00 
                                      tx_data[0-7]           1           1      100.00 
                                          tx_valid           1           1      100.00 

Total Node Count     =         43 
Toggled Node Count   =         43 
Untoggled Node Count =          0 

Toggle Coverage      =     100.00% (86 of 86 bins)

=================================================================================
=== Instance: /top/DUT/RAM_instance/sva_inst
=== Design Unit: work.RAM_sva
=================================================================================

Assertion Coverage:
    Assertions                       5         5         0   100.00%
--------------------------------------------------------------------
Name                 File(Line)                   Failure      Pass 
                                                  Count        Count
--------------------------------------------------------------------
/top/DUT/RAM_instance/sva_inst/reset_asrt
                     ../RAM/RAM_sva.sv(28)              0          1
/top/DUT/RAM_instance/sva_inst/tx_low_asrt
                     ../RAM/RAM_sva.sv(31)              0          1
/top/DUT/RAM_instance/sva_inst/tx_rise_fall_asrt
                     ../RAM/RAM_sva.sv(34)              0          1
/top/DUT/RAM_instance/sva_inst/wraddr_wrdata_asrt
                     ../RAM/RAM_sva.sv(37)              0          1
/top/DUT/RAM_instance/sva_inst/rdaddr_rddata_asrt
                     ../RAM/RAM_sva.sv(40)              0          1

Directive Coverage:
    Directives                       5         5         0   100.00%

DIRECTIVE COVERAGE:
--------------------------------------------------------------------------------------------
Name                                     Design Design   Lang File(Line)      Hits Status    
                                         Unit   UnitType                                     
--------------------------------------------------------------------------------------------
/top/DUT/RAM_instance/sva_inst/reset_cov RAM_sva Verilog  SVA  ../RAM/RAM_sva.sv(29)
                                                                                31 Covered   
/top/DUT/RAM_instance/sva_inst/tx_low_cov 
                                         RAM_sva Verilog  SVA  ../RAM/RAM_sva.sv(32)
                                                                              2152 Covered   
/top/DUT/RAM_instance/sva_inst/tx_rise_fall_cov 
                                         RAM_sva Verilog  SVA  ../RAM/RAM_sva.sv(35)
                                                                               620 Covered   
/top/DUT/RAM_instance/sva_inst/wraddr_wrdata_cov 
                                         RAM_sva Verilog  SVA  ../RAM/RAM_sva.sv(38)
                                                                               557 Covered   
/top/DUT/RAM_instance/sva_inst/rdaddr_rddata_cov 
                                         RAM_sva Verilog  SVA  ../RAM/RAM_sva.sv(41)
                                                                               361 Covered   
Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                         44        44         0   100.00%

================================Toggle Details================================

Toggle Coverage for instance /top/DUT/RAM_instance/sva_inst --

                                              Node      1H->0L      0L->1H  "Coverage"
                                              ---------------------------------------
                                               clk           1           1      100.00 
                                          din[0-9]           1           1      100.00 
                                         dout[0-7]           1           1      100.00 
                                             rst_n           1           1      100.00 
                                          rx_valid           1           1      100.00 
                                          tx_valid           1           1      100.00 

Total Node Count     =         22 
Toggled Node Count   =         22 
Untoggled Node Count =          0 

Toggle Coverage      =     100.00% (44 of 44 bins)

=================================================================================
=== Instance: /top/DUT/RAM_instance
=== Design Unit: work.RAM
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         8         7         1    87.50%

================================Branch Details================================

Branch Coverage for instance /top/DUT/RAM_instance

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File ../RAM/RAM.v
------------------------------------IF Branch------------------------------------
    14                                       661     Count coming in to IF
    14              1                         31         if (~rst_n) begin
    21              1                        361             if (rx_valid) begin
                                             269     All False Count
Branch totals: 3 hits of 3 branches = 100.00%

------------------------------------CASE Branch------------------------------------
    22                                       361     Count coming in to CASE
    23              1                        112                     2'b00 : Wr_Addr <= din[7:0]; // wr address
    24              1                         61                     2'b01 : MEM[Wr_Addr] <= din[7:0]; // wr data
    25              1                         73                     2'b10 : Rd_Addr <= din[7:0]; // rd address 
    26              1                        115                     2'b11 : dout <= MEM[Rd_Addr]; // rd data   <- BUG
    27              1                    ***0***                     default : dout <= 0;
Branch totals: 4 hits of 5 branches = 80.00%


Expression Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Expressions                      4         4         0   100.00%

================================Expression Details================================

Expression Coverage for instance /top/DUT/RAM_instance --

  File ../RAM/RAM.v
----------------Focused Expression View-----------------
Line       30 Item    1  (((din[9] && din[8]) && rx_valid) && rst_n)
Expression totals: 4 of 4 input terms covered = 100.00%

  Input Term   Covered  Reason for no coverage   Hint
 -----------  --------  -----------------------  --------------
      din[9]         Y
      din[8]         Y
    rx_valid         Y
       rst_n         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  din[9]_0              -                             
  Row   2:          1  din[9]_1              (rst_n && rx_valid && din[8]) 
  Row   3:          1  din[8]_0              din[9]                        
  Row   4:          1  din[8]_1              (rst_n && rx_valid && din[9]) 
  Row   5:          1  rx_valid_0            (din[9] && din[8])            
  Row   6:          1  rx_valid_1            (rst_n && (din[9] && din[8])) 
  Row   7:          1  rst_n_0               ((din[9] && din[8]) && rx_valid)
  Row   8:          1  rst_n_1               ((din[9] && din[8]) && rx_valid)


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      10         9         1    90.00%

================================Statement Details================================

Statement Coverage for instance /top/DUT/RAM_instance --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File ../RAM/RAM.v
    1                                                module RAM (din,clk,rst_n,rx_valid,dout,tx_valid);
    2                                                
    3                                                input      [9:0] din;
    4                                                input            clk, rst_n, rx_valid;
    5                                                
    6                                                output reg [7:0] dout;
    7                                                output reg       tx_valid;
    8                                                
    9                                                reg [7:0] MEM [255:0];
    10                                               
    11                                               reg [7:0] Rd_Addr, Wr_Addr;
    12                                               
    13              1                        661     always @(posedge clk) begin
    14                                                   if (~rst_n) begin
    15              1                         31             dout <= 0;
    16                                                       //tx_valid <= 0; <- BUG
    17              1                         31             Rd_Addr <= 0;
    18              1                         31             Wr_Addr <= 0;
    19                                                   end
    20                                                   else                                           
    21                                                       if (rx_valid) begin
    22                                                           case (din[9:8])
    23              1                        112                     2'b00 : Wr_Addr <= din[7:0]; // wr address
    24              1                         61                     2'b01 : MEM[Wr_Addr] <= din[7:0]; // wr data
    25              1                         73                     2'b10 : Rd_Addr <= din[7:0]; // rd address 
    26              1                        115                     2'b11 : dout <= MEM[Rd_Addr]; // rd data   <- BUG
    27              1                    ***0***                     default : dout <= 0;
    28                                                           endcase
    29                                                       end
    30              1                        661         tx_valid <= (din[9] && din[8] && rx_valid && rst_n)? 1'b1 : 1'b0; 

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                         76        76         0   100.00%

================================Toggle Details================================

Toggle Coverage for instance /top/DUT/RAM_instance --

                                              Node      1H->0L      0L->1H  "Coverage"
                                              ---------------------------------------
                                      Rd_Addr[7-0]           1           1      100.00 
                                      Wr_Addr[7-0]           1           1      100.00 
                                               clk           1           1      100.00 
                                          din[0-9]           1           1      100.00 
                                         dout[7-0]           1           1      100.00 
                                             rst_n           1           1      100.00 
                                          rx_valid           1           1      100.00 
                                          tx_valid           1           1      100.00 

Total Node Count     =         38 
Toggled Node Count   =         38 
Untoggled Node Count =          0 

Toggle Coverage      =     100.00% (76 of 76 bins)

=================================================================================
=== Instance: /top/DUT
=== Design Unit: work.WRAPPER
=================================================================================
Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                         50        50         0   100.00%

================================Toggle Details================================

Toggle Coverage for instance /top/DUT --

                                              Node      1H->0L      0L->1H  "Coverage"
                                              ---------------------------------------
                                              MISO           1           1      100.00 
                                              MOSI           1           1      100.00 
                                              SS_n           1           1      100.00 
                                               clk           1           1      100.00 
                                             rst_n           1           1      100.00 
                                  rx_data_din[0-9]           1           1      100.00 
                                          rx_valid           1           1      100.00 
                                 tx_data_dout[0-7]           1           1      100.00 
                                          tx_valid           1           1      100.00 

Total Node Count     =         25 
Toggled Node Count   =         25 
Untoggled Node Count =          0 

Toggle Coverage      =     100.00% (50 of 50 bins)

=================================================================================
=== Instance: /top
=== Design Unit: work.top
=================================================================================
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      23        23         0   100.00%

================================Statement Details================================

Statement Coverage for instance /top --
NOTE: The modification timestamp for source file 'top.sv' has been altered since compilation.

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File top.sv
    8                                                module top ();
    9                                                  bit clk;
    10                                                 initial begin
    11              1                          1         $readmemb("../RAM/mem.dat", DUT.RAM_instance.MEM);
    12              1                          1         $readmemb("../RAM/mem.dat", golden_model_ram.mem);
    13                                                 end
    14                                                 initial begin
    15              1                          1         forever #5 clk = ~clk;
    15              2                       6003     
    15              3                       6002     
    16                                                 end
    17                                               
    18                                               
    19                                                 /////////
    20                                                 // RAM //
    21                                                 /////////
    22                                                 RAM_if RAMif (clk);
    23                                                 RAM_golden golden_model_ram (
    24                                                     .din(RAMif.din),
    25                                                     .clk(clk),
    26                                                     .rst_n(RAMif.rst_n),
    27                                                     .rx_valid(RAMif.rx_valid),
    28                                                     .dout(RAMif.dout_ref),
    29                                                     .tx_valid(RAMif.tx_valid_ref)
    30                                                 );
    31                                                 bind RAM RAM_sva sva_inst (
    32                                                     .din(RAMif.din),
    33                                                     .clk(clk),
    34                                                     .rst_n(RAMif.rst_n),
    35                                                     .rx_valid(RAMif.rx_valid),
    36                                                     .dout(RAMif.dout),
    37                                                     .tx_valid(RAMif.tx_valid)
    38                                                 );
    39                                                 /////////
    40                                                 // SPI //
    41                                                 /////////
    42                                               
    43                                                 SPI_if SPIif (clk);
    44                                                 SPI golden_model_spi (
    45                                                     SPIif.MOSI,
    46                                                     SPIif.SS_n,
    47                                                     SPIif.clk,
    48                                                     SPIif.rst_n,
    49                                                     SPIif.tx_data,
    50                                                     SPIif.tx_valid,
    51                                                     SPIif.MISO_exp,
    52                                                     SPIif.rx_data_exp,
    53                                                     SPIif.rx_valid_exp
    54                                                 );
    55                                                 assign SPIif.cs = cs;
    56                                               
    57                                                       /////////////
    58                                                       // Wrapper //
    59                                                       /////////////
    60                                                 WRAPPER_if WRAPPERif(clk);
    61                                                 WRAPPER DUT (
    62                                                     .MOSI(WRAPPERif.MOSI),
    63                                                     .MISO(WRAPPERif.MISO),
    64                                                     .SS_n(WRAPPERif.SS_n),
    65                                                     .clk(clk),
    66                                                     .rst_n(WRAPPERif.rst_n)
    67                                                 );
    68                                               
    69                                                   /////////////////////////////
    70                                                   // Interface connections //
    71                                                   /////////////////////////////
    72              1                        223         assign RAMif.din = DUT.rx_data_din;
    73              1                        376         assign RAMif.rx_valid = DUT.rx_valid;
    74              1                         63         assign RAMif.rst_n = DUT.rst_n;
    75              1                        124         assign RAMif.tx_valid = DUT.tx_valid;
    76              1                         30         assign RAMif.dout = DUT.tx_data_dout;
    77                                               
    78              1                       1031         assign SPIif.MOSI = DUT.MOSI;
    79              1                          4         assign SPIif.MISO = DUT.MISO;
    80              1                         63         assign SPIif.rst_n = DUT.rst_n;
    81              1                        358         assign SPIif.SS_n = DUT.SS_n;
    82              1                        223         assign SPIif.rx_data = DUT.rx_data_din;
    83                                               
    84              1                        223         assign WRAPPERif.rx_data_din = DUT.rx_data_din;
    85              1                        376         assign WRAPPERif.rx_valid = DUT.rx_valid;
    86              1                        124         assign WRAPPERif.tx_valid = DUT.tx_valid;
    87              1                         30         assign WRAPPERif.tx_data_dout = DUT.tx_data_dout;
    88                                               
    89                                               
    90                                                 initial begin
    91              1                          1         uvm_config_db#(virtual RAM_if)::set(null, "uvm_test_top", "RAM_IF", RAMif);
    92              1                          1         uvm_config_db#(virtual SPI_if)::set(null, "uvm_test_top", "SPI_IF", SPIif);
    93              1                          1         uvm_config_db#(virtual WRAPPER_if)::set(null, "uvm_test_top", "WRAPPER_IF", WRAPPERif);
    94              1                          1         run_test("WRAPPER_test");

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                          2         2         0   100.00%

================================Toggle Details================================

Toggle Coverage for instance /top --

                                              Node      1H->0L      0L->1H  "Coverage"
                                              ---------------------------------------
                                               clk           1           1      100.00 

Total Node Count     =          1 
Toggled Node Count   =          1 
Untoggled Node Count =          0 

Toggle Coverage      =     100.00% (2 of 2 bins)

=================================================================================
=== Instance: /SPI_seq_item_pkg
=== Design Unit: work.SPI_seq_item_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        14         0        14     0.00%

================================Branch Details================================

Branch Coverage for instance /SPI_seq_item_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File ../SPI/SPI_seq_item.sv
------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               1                    ***0***       `uvm_object_utils(SPI_seq_item)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               2                    ***0***       `uvm_object_utils(SPI_seq_item)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               3                    ***0***       `uvm_object_utils(SPI_seq_item)
    7               4                    ***0***       `uvm_object_utils(SPI_seq_item)
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               5                    ***0***       `uvm_object_utils(SPI_seq_item)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               6                    ***0***       `uvm_object_utils(SPI_seq_item)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    32                                   ***0***     Count coming in to IF
    32              1                    ***0***         if (MOSI_bits[10:8] == 3'b111) begin
    36              1                    ***0***         else begin
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    41                                   ***0***     Count coming in to IF
    41              1                    ***0***         if(~SS_n)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       3         0         3     0.00%

================================Condition Details================================

Condition Coverage for instance /SPI_seq_item_pkg --

  File ../SPI/SPI_seq_item.sv
----------------Focused Condition View-------------------
Line       7 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       7 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:    ***0***  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             

----------------Focused Condition View-------------------
Line       32 Item    1  (this.MOSI_bits[10:8] == 7)
Condition totals: 0 of 1 input term covered = 0.00%

                   Input Term   Covered  Reason for no coverage   Hint
                  -----------  --------  -----------------------  --------------
  (this.MOSI_bits[10:8] == 7)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                     Non-masking condition(s)      
 ---------  ---------  --------------------           -------------------------     
  Row   1:    ***0***  (this.MOSI_bits[10:8] == 7)_0  -                             
  Row   2:    ***0***  (this.MOSI_bits[10:8] == 7)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      20         1        19     5.00%

================================Statement Details================================

Statement Coverage for instance /SPI_seq_item_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File ../SPI/SPI_seq_item.sv
    1                                                package SPI_seq_item_pkg;
    2                                                import SPI_shared_pkg::*;
    3                                                import uvm_pkg::*;
    4                                                `include "uvm_macros.svh"
    5                                                
    6                                                class SPI_seq_item extends uvm_sequence_item;
    7               1                    ***0***       `uvm_object_utils(SPI_seq_item)
    7               2                    ***0***     
    7               3                    ***0***     
    7               4                    ***0***     
    7               5                    ***0***     
    7               6                    ***0***     
    7               7                    ***0***     
    7               8                    ***0***     
    7               9                    ***0***     
    7              10                    ***0***     
    8                                                  rand logic rst_n, SS_n, tx_valid;
    9                                                  logic MOSI;
    10                                                 rand logic [10:0] MOSI_bits;
    11                                                 rand logic [7:0] tx_data;
    12                                                 logic [9:0] rx_data;
    13                                                 logic rx_valid,MISO;
    14                                                 
    15                                                 function new(string name = "SPI_seq_item");
    16              1                       3002         super.new(name);
    17                                                 endfunction
    18                                                 function string convert2string();
    19              1                    ***0***         return $sformatf("%s rst_n=%b SS_n=%b tx_valid=%b tx_data=%b MOSI=%b rx_data=%b rx_valid=%b MISO=%b",
    20                                                   super.convert2string(),rst_n,SS_n,tx_valid,tx_data,MOSI,rx_data,rx_valid,MISO);
    21                                                 endfunction
    22                                                 function string convert2string_stimulus();
    23              1                    ***0***         return $sformatf("%s rst_n=%b SS_n=%b tx_valid=%b tx_data=%b MOSI=%b",
    24                                                   super.convert2string(),rst_n,SS_n,tx_valid,tx_data,MOSI);
    25                                                 endfunction
    26                                                 constraint reset {
    27                                                   rst_n      dist {1:/98,0:/2};
    28                                                 }
    29                                                 function void post_randomize();
    30              1                    ***0***         bit [2:0] valid_codes [4] = '{3'b000, 3'b001, 3'b110, 3'b111};
    31              1                    ***0***         $display("MOSI_bits=%b at time=%t",MOSI_bits,$time);
    32                                                   if (MOSI_bits[10:8] == 3'b111) begin
    33              1                    ***0***           cycles_before_SS_high = 23;
    34              1                    ***0***           tx_valid = 1;
    35                                                   end
    36                                                   else begin
    37              1                    ***0***           tx_valid = 0;
    38              1                    ***0***           cycles_before_SS_high = 13;
    39                                                   end
    40                                                   // Ensure first 3 bits of MOSI_bits are valid codes
    41                                                   if(~SS_n)
    42              1                    ***0***           MOSI_bits[10:8] = valid_codes[$urandom_range(0,3)];


=================================================================================
=== Instance: /SPI_pkg_cover
=== Design Unit: work.SPI_pkg_cover
=================================================================================

Covergroup Coverage:
    Covergroups                      1        na        na   100.00%
        Coverpoints/Crosses          4        na        na        na
            Covergroup Bins         14        14         0   100.00%
----------------------------------------------------------------------------------------------------------
Covergroup                                             Metric       Goal       Bins    Status               
                                                                                                         
----------------------------------------------------------------------------------------------------------
 TYPE /SPI_pkg_cover/SPI_coverage/cvr_grp             100.00%        100          -    Covered              
    covered/total bins:                                    14         14          -                      
    missing/total bins:                                     0         14          -                      
    % Hit:                                            100.00%        100          -                      
    Coverpoint rx_data_cp                             100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint SS_n_cp                                100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint MOSI_cp                                100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
    Cross SS_n_MOSI                                   100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
 Covergroup instance \/SPI_pkg_cover::SPI_coverage::cvr_grp  
                                                      100.00%        100          -    Covered              
    covered/total bins:                                    14         14          -                      
    missing/total bins:                                     0         14          -                      
    % Hit:                                            100.00%        100          -                      
    Coverpoint rx_data_cp                             100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                      1214          1          -    Covered              
        bin auto[1]                                       442          1          -    Covered              
        bin auto[2]                                       544          1          -    Covered              
        bin auto[3]                                       801          1          -    Covered              
    Coverpoint SS_n_cp                                100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin extended_transaction[1=>0[*23]=>1]             26          1          -    Covered              
        bin full_transaction_normal[1=>0[*13]=>1]         128          1          -    Covered              
    Coverpoint MOSI_cp                                100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
        bin write_addr                                    711          1          -    Covered              
        bin write_data                                    297          1          -    Covered              
        bin read_addr                                     302          1          -    Covered              
        bin read_data                                     661          1          -    Covered              
    Cross SS_n_MOSI                                   100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin write_addr_full                            45          1          -    Covered              
            bin write_data_full                             6          1          -    Covered              
            bin read_addr_full                              6          1          -    Covered              
            bin read_data_extended                          6          1          -    Covered              
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      14        12         2    85.71%

================================Statement Details================================

Statement Coverage for instance /SPI_pkg_cover --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File ../SPI/SPI_coverage.sv
    1                                                package SPI_pkg_cover;
    2                                                    import uvm_pkg::*;
    3                                                    import SPI_seq_item_pkg::*;
    4                                                    import SPI_shared_pkg::*;
    5                                                    `include "uvm_macros.svh"
    6                                                    class SPI_coverage extends uvm_component;
    7               1                    ***0***             `uvm_component_utils(SPI_coverage)
    7               2                    ***0***     
    7               3                          2     
    8                                                        uvm_analysis_export #(SPI_seq_item) cov_export;
    9                                                        uvm_tlm_analysis_fifo #(SPI_seq_item) cov_fifo;
    10                                                       SPI_seq_item seq_item_cov;
    11                                                       covergroup cvr_grp;
    12                                                           rx_data_cp: coverpoint seq_item_cov.rx_data[9:8];
    13                                                           SS_n_cp: coverpoint seq_item_cov.SS_n {
    14                                                               bins extended_transaction[] = (1 => 0[*23] => 1);
    15                                                               bins full_transaction_normal[] = (1 => 0[*13] => 1);
    16                                                           }
    17                                                           MOSI_cp: coverpoint seq_item_cov.MOSI {
    18                                                               bins write_addr = (0=>0=>0);
    19                                                               bins write_data = (0=>0=>1);
    20                                                               bins read_addr = (1=>1=>0);
    21                                                               bins read_data = (1=>1=>1);
    22                                                           }
    23                                                           SS_n_MOSI: cross SS_n_cp, MOSI_cp {
    24                                                               option.cross_auto_bin_max =0;
    25                                                               bins write_addr_full = binsof(SS_n_cp.full_transaction_normal) && binsof(MOSI_cp.write_addr);
    26                                                               bins write_data_full = binsof(SS_n_cp.full_transaction_normal) && binsof(MOSI_cp.write_data);
    27                                                               bins read_addr_full = binsof(SS_n_cp.full_transaction_normal) && binsof(MOSI_cp.read_addr);
    28                                                               bins read_data_extended = binsof(SS_n_cp.extended_transaction) && binsof(MOSI_cp.read_data);
    29                                                           }
    30                                                       endgroup
    31                                                       function new(string name = "SPI_coverage",uvm_component parent = null);
    32              1                          1                 super.new(name,parent);
    33              1                          1                 cvr_grp=new();
    34                                                       endfunction
    35                                                       function void build_phase(uvm_phase phase);
    36              1                          1                 super.build_phase(phase);
    37              1                          1                 cov_export = new("cov_export",this);
    38              1                          1                 cov_fifo = new("cov_fifo",this);
    39                                                       endfunction
    40                                                       function void connect_phase(uvm_phase phase);
    41              1                          1                 super.connect_phase(phase);
    42              1                          1                 cov_export.connect(cov_fifo.analysis_export);
    43                                                       endfunction
    44                                                       task run_phase(uvm_phase phase);
    45              1                          1                 super.run_phase(phase);
    46              1                          1                 forever begin
    47              1                       3002                     cov_fifo.get(seq_item_cov);
    48              1                       3001                     cvr_grp.sample();


=================================================================================
=== Instance: /SPI_pkg_score
=== Design Unit: work.SPI_pkg_score
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        10         4         6    40.00%

================================Branch Details================================

Branch Coverage for instance /SPI_pkg_score

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File ../SPI/SPI_score.sv
------------------------------------IF Branch------------------------------------
    32                                      3001     Count coming in to IF
    32              1                    ***0***                     if(seq_item_sb.rx_data != rx_data_exp || seq_item_sb.rx_valid != rx_valid_exp || seq_item_sb.MISO != MISO_exp) begin
    37              1                       3001                     else begin
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    33                                   ***0***     Count coming in to IF
    33              1                    ***0***                         `uvm_error("run_phase", $sformatf("Comparison failed, transactions recieved by the DUT:%s while the 
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    38                                      3001     Count coming in to IF
    38              1                    ***0***                         `uvm_info("run_phase", $sformatf("Correct output:%s",seq_item_sb.convert2string()),UVM_HIGH);
                                            3001     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    45                                         1     Count coming in to IF
    45              1                          1                 `uvm_info("report_phase",$sformatf("Total successful transactions: %0d",correct_count),UVM_MEDIUM);
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    46                                         1     Count coming in to IF
    46              1                          1                 `uvm_info("report_phase",$sformatf("Total failed transactions: %0d",error_count),UVM_MEDIUM);
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       3         0         3     0.00%

================================Condition Details================================

Condition Coverage for instance /SPI_pkg_score --

  File ../SPI/SPI_score.sv
----------------Focused Condition View-------------------
Line       32 Item    1  ((this.seq_item_sb.rx_data != this.rx_data_exp) || (this.seq_item_sb.rx_valid != this.rx_valid_exp) || (this.seq_item_sb.MISO != this.MISO_exp))
Condition totals: 0 of 3 input terms covered = 0.00%

                                        Input Term   Covered  Reason for no coverage   Hint
                                       -----------  --------  -----------------------  --------------
    (this.seq_item_sb.rx_data != this.rx_data_exp)         N  No hits                  Hit '_0' and '_1'
  (this.seq_item_sb.rx_valid != this.rx_valid_exp)         N  No hits                  Hit '_0' and '_1'
          (this.seq_item_sb.MISO != this.MISO_exp)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                                          Non-masking condition(s)      
 ---------  ---------  --------------------                                -------------------------     
  Row   1:    ***0***  (this.seq_item_sb.rx_data != this.rx_data_exp)_0    ~((this.seq_item_sb.rx_valid != this.rx_valid_exp) || (this.seq_item_sb.MISO != this.MISO_exp))
  Row   2:    ***0***  (this.seq_item_sb.rx_data != this.rx_data_exp)_1    -                             
  Row   3:    ***0***  (this.seq_item_sb.rx_valid != this.rx_valid_exp)_0  (~(this.seq_item_sb.rx_data != this.rx_data_exp) && ~(this.seq_item_sb.MISO != this.MISO_exp))
  Row   4:    ***0***  (this.seq_item_sb.rx_valid != this.rx_valid_exp)_1  ~(this.seq_item_sb.rx_data != this.rx_data_exp)
  Row   5:    ***0***  (this.seq_item_sb.MISO != this.MISO_exp)_0          (~(this.seq_item_sb.rx_data != this.rx_data_exp) && ~(this.seq_item_sb.rx_valid != this.rx_valid_exp))
  Row   6:    ***0***  (this.seq_item_sb.MISO != this.MISO_exp)_1          (~(this.seq_item_sb.rx_data != this.rx_data_exp) && ~(this.seq_item_sb.rx_valid != this.rx_valid_exp))


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      21        16         5    76.19%

================================Statement Details================================

Statement Coverage for instance /SPI_pkg_score --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File ../SPI/SPI_score.sv
    1                                                package SPI_pkg_score;
    2                                                    import uvm_pkg::*;
    3                                                    import SPI_seq_item_pkg::*;
    4                                                    import SPI_shared_pkg::*;
    5                                                    `include "uvm_macros.svh"
    6                                                    class SPI_scoreboard extends uvm_scoreboard;
    7               1                    ***0***             `uvm_component_utils(SPI_scoreboard)
    7               2                    ***0***     
    7               3                          2     
    8                                                        uvm_analysis_export #(SPI_seq_item) sb_export;
    9                                                        uvm_tlm_analysis_fifo #(SPI_seq_item) sb_fifo;
    10                                                       SPI_seq_item seq_item_sb;
    11                                                       logic [9:0] rx_data_exp;
    12                                                       logic rx_valid_exp,MISO_exp;
    13              1                          1             int error_count=0;
    14              1                          1             int correct_count =0;
    15                                                       uvm_analysis_port #(SPI_seq_item) agt_ap;
    16                                                       function new(string name = "SPI_scoreboard",uvm_component parent = null);
    17              1                          1                 super.new(name,parent);
    18                                                       endfunction
    19                                                       function void build_phase(uvm_phase phase);
    20              1                          1                 super.build_phase(phase);
    21              1                          1                 sb_export = new("sb_export",this);
    22              1                          1                 sb_fifo = new("sb_fifo",this);
    23                                                       endfunction
    24                                                       function void connect_phase(uvm_phase phase);
    25              1                          1                 super.connect_phase(phase);
    26              1                          1                 sb_export.connect(sb_fifo.analysis_export);
    27                                                       endfunction
    28                                                       task run_phase(uvm_phase phase);
    29              1                          1                 super.run_phase(phase);
    30              1                          1                 forever begin
    31              1                       3002                     sb_fifo.get(seq_item_sb);
    32                                                               if(seq_item_sb.rx_data != rx_data_exp || seq_item_sb.rx_valid != rx_valid_exp || seq_item_sb.MISO != MISO_exp) begin
    33              1                    ***0***                         `uvm_error("run_phase", $sformatf("Comparison failed, transactions recieved by the DUT:%s while the 
    34                                                                   refrence out:%0b",seq_item_sb.convert2string(),rx_data_exp,rx_valid_exp,MISO_exp));
    35              1                    ***0***                         error_count++;
    36                                                               end
    37                                                               else begin
    38              1                    ***0***                         `uvm_info("run_phase", $sformatf("Correct output:%s",seq_item_sb.convert2string()),UVM_HIGH);
    39              1                       3001                         correct_count++;
    40                                                               end
    41                                                           end
    42                                                       endtask
    43                                                       function void report_phase(uvm_phase phase);
    44              1                          1                 super.report_phase(phase);
    45              1                          1                 `uvm_info("report_phase",$sformatf("Total successful transactions: %0d",correct_count),UVM_MEDIUM);
    46              1                          1                 `uvm_info("report_phase",$sformatf("Total failed transactions: %0d",error_count),UVM_MEDIUM);


=================================================================================
=== Instance: /SPI_pkg_obj
=== Design Unit: work.SPI_pkg_obj
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        10         0        10     0.00%

================================Branch Details================================

Branch Coverage for instance /SPI_pkg_obj

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File ../SPI/SPI_config_obj.sv
------------------------------------IF Branch------------------------------------
    5                                    ***0***     Count coming in to IF
    5               1                    ***0***             `uvm_object_utils(SPI_config_obj)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    5                                    ***0***     Count coming in to IF
    5               2                    ***0***             `uvm_object_utils(SPI_config_obj)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    5                                    ***0***     Count coming in to IF
    5               3                    ***0***             `uvm_object_utils(SPI_config_obj)
    5               4                    ***0***             `uvm_object_utils(SPI_config_obj)
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    5                                    ***0***     Count coming in to IF
    5               5                    ***0***             `uvm_object_utils(SPI_config_obj)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    5                                    ***0***     Count coming in to IF
    5               6                    ***0***             `uvm_object_utils(SPI_config_obj)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       2         0         2     0.00%

================================Condition Details================================

Condition Coverage for instance /SPI_pkg_obj --

  File ../SPI/SPI_config_obj.sv
----------------Focused Condition View-------------------
Line       5 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       5 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:    ***0***  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      11         1        10     9.09%

================================Statement Details================================

Statement Coverage for instance /SPI_pkg_obj --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File ../SPI/SPI_config_obj.sv
    1                                                package SPI_pkg_obj;
    2                                                import uvm_pkg::*;
    3                                                `include "uvm_macros.svh"
    4                                                    class SPI_config_obj extends uvm_object;
    5               1                    ***0***             `uvm_object_utils(SPI_config_obj)
    5               2                    ***0***     
    5               3                    ***0***     
    5               4                    ***0***     
    5               5                    ***0***     
    5               6                    ***0***     
    5               7                    ***0***     
    5               8                    ***0***     
    5               9                    ***0***     
    5              10                    ***0***     
    6                                                        virtual SPI_if SPI_vif;
    7                                                        uvm_active_passive_enum is_active;
    8                                                        function new(string name = "SPI_config_obj");
    9               1                          1                 super.new(name);


=================================================================================
=== Instance: /SPI_pkg_mon
=== Design Unit: work.SPI_pkg_mon
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         2         1         1    50.00%

================================Branch Details================================

Branch Coverage for instance /SPI_pkg_mon

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File ../SPI/SPI_mon.sv
------------------------------------IF Branch------------------------------------
    34                                      3001     Count coming in to IF
    34              1                    ***0***                     `uvm_info("run_phase",rsp_seq_item.convert2string_stimulus(),UVM_HIGH) 
                                            3001     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      20        17         3    85.00%

================================Statement Details================================

Statement Coverage for instance /SPI_pkg_mon --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File ../SPI/SPI_mon.sv
    1                                                package SPI_pkg_mon;
    2                                                    import uvm_pkg::*;
    3                                                    import SPI_seq_item_pkg::*;
    4                                                    import SPI_shared_pkg::*;
    5                                                    `include "uvm_macros.svh"
    6                                                    class SPI_mon extends uvm_monitor;
    7               1                    ***0***             `uvm_component_utils(SPI_mon)
    7               2                    ***0***     
    7               3                          2     
    8                                                        virtual SPI_if SPI_vif;
    9                                                        SPI_seq_item rsp_seq_item;
    10                                                       uvm_analysis_port #(SPI_seq_item) mon_ap;
    11                                                       function new(string name = "SPI_mon",uvm_component parent = null);
    12              1                          1                 super.new(name,parent);
    13                                                       endfunction
    14                                                       function void build_phase(uvm_phase phase);
    15              1                          1                 super.build_phase(phase);
    16              1                          1                 mon_ap=new("mon_ap",this);
    17                                                       endfunction
    18                                                       task run_phase(uvm_phase phase);
    19              1                          1                 super.run_phase(phase);
    20              1                          1                 forever begin
    21              1                       3002                     rsp_seq_item = SPI_seq_item::type_id::create("rsp_seq_item");
    22                                                               //for (int i = 10; i >= 0; i--) begin
    23              1                       3002                         @(negedge SPI_vif.clk);
    24              1                       3001                         rsp_seq_item.MOSI=SPI_vif.MOSI;
    25              1                       3001                         rsp_seq_item.rst_n=SPI_vif.rst_n;
    26              1                       3001                         rsp_seq_item.SS_n=SPI_vif.SS_n;
    27              1                       3001                         rsp_seq_item.tx_valid=SPI_vif.tx_valid;
    28              1                       3001                         rsp_seq_item.tx_data=SPI_vif.tx_data;
    29              1                       3001                         rsp_seq_item.rx_data=SPI_vif.rx_data;
    30              1                       3001                         rsp_seq_item.rx_valid=SPI_vif.rx_valid;
    31              1                       3001                         rsp_seq_item.MISO=SPI_vif.MISO;
    32                                                               //end
    33              1                       3001                     mon_ap.write(rsp_seq_item);
    34              1                    ***0***                     `uvm_info("run_phase",rsp_seq_item.convert2string_stimulus(),UVM_HIGH) 


=================================================================================
=== Instance: /SPI_driver_pkg
=== Design Unit: work.SPI_driver_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         4         0         4     0.00%

================================Branch Details================================

Branch Coverage for instance /SPI_driver_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File ../SPI/SPI_driver.sv
------------------------------------IF Branch------------------------------------
    23                                   ***0***     Count coming in to IF
    23              1                    ***0***                     if (SPI_vif.SS_n == 0 && SPI_vif.rst_n == 1) begin
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    35                                   ***0***     Count coming in to IF
    35              1                    ***0***                     `uvm_info("run_phase",stim_seq_item.convert2string_stimulus(),UVM_HIGH) 
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       2         0         2     0.00%

================================Condition Details================================

Condition Coverage for instance /SPI_driver_pkg --

  File ../SPI/SPI_driver.sv
----------------Focused Condition View-------------------
Line       23 Item    1  (~this.SPI_vif.SS_n && this.SPI_vif.rst_n)
Condition totals: 0 of 2 input terms covered = 0.00%

          Input Term   Covered  Reason for no coverage   Hint
         -----------  --------  -----------------------  --------------
   this.SPI_vif.SS_n         N  No hits                  Hit '_0' and '_1'
  this.SPI_vif.rst_n         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  this.SPI_vif.SS_n_0   this.SPI_vif.rst_n            
  Row   2:    ***0***  this.SPI_vif.SS_n_1   -                             
  Row   3:    ***0***  this.SPI_vif.rst_n_0  ~this.SPI_vif.SS_n            
  Row   4:    ***0***  this.SPI_vif.rst_n_1  ~this.SPI_vif.SS_n            


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      23         0        23     0.00%

================================Statement Details================================

Statement Coverage for instance /SPI_driver_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File ../SPI/SPI_driver.sv
    1                                                package SPI_driver_pkg;
    2                                                    import uvm_pkg::*;
    3                                                    import SPI_seq_item_pkg::*;
    4                                                    import SPI_shared_pkg::*;
    5                                                    `include "uvm_macros.svh"
    6                                                    class SPI_driver extends uvm_driver #(SPI_seq_item);
    7               1                    ***0***             `uvm_component_utils(SPI_driver)
    7               2                    ***0***     
    7               3                    ***0***     
    8                                                        virtual SPI_if SPI_vif;
    9                                                        SPI_seq_item stim_seq_item;
    10                                                       function new(string name = "SPI_driver",uvm_component parent = null);
    11              1                    ***0***                 super.new(name,parent);
    12                                                       endfunction
    13                                                       task run_phase(uvm_phase phase);
    14              1                    ***0***                 super.run_phase(phase);
    15              1                    ***0***                 forever begin
    16              1                    ***0***                     stim_seq_item = SPI_seq_item::type_id::create("stim_seq_item");
    17              1                    ***0***                     seq_item_port.get_next_item(stim_seq_item);
    18              1                    ***0***                     SPI_vif.rst_n=stim_seq_item.rst_n;
    19              1                    ***0***                     SPI_vif.SS_n=stim_seq_item.SS_n;
    20              1                    ***0***                     SPI_vif.tx_valid=stim_seq_item.tx_valid;
    21              1                    ***0***                     SPI_vif.tx_data=stim_seq_item.tx_data;
    22              1                    ***0***                     @(negedge SPI_vif.clk);
    23                                                               if (SPI_vif.SS_n == 0 && SPI_vif.rst_n == 1) begin
    24              1                    ***0***                         for (int i = 10; i >= 0; i--) begin
    24              2                    ***0***     
    25              1                    ***0***                             SPI_vif.MOSI = stim_seq_item.MOSI_bits[i];
    26              1                    ***0***                             @(negedge SPI_vif.clk);
    27                                                                   end
    28                                                                   // wait remaining cycles (total - 11)
    29              1                    ***0***                         repeat (cycles_before_SS_high - 12) @(negedge SPI_vif.clk);
    29              2                    ***0***     
    30                                                                   // end transaction: SS_n high
    31              1                    ***0***                         SPI_vif.SS_n = 1;
    32              1                    ***0***                         @(negedge SPI_vif.clk);   
    33                                                               end    
    34              1                    ***0***                     seq_item_port.item_done();
    35              1                    ***0***                     `uvm_info("run_phase",stim_seq_item.convert2string_stimulus(),UVM_HIGH) 


=================================================================================
=== Instance: /SPI_sequencer_pkg
=== Design Unit: work.SPI_sequencer_pkg
=================================================================================
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                       4         0         4     0.00%

================================Statement Details================================

Statement Coverage for instance /SPI_sequencer_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File ../SPI/SPI_sequencer.sv
    1                                                package SPI_sequencer_pkg;
    2                                                import uvm_pkg::*;
    3                                                import SPI_seq_item_pkg::*;
    4                                                `include "uvm_macros.svh"
    5                                                
    6                                                class SPI_sequencer extends uvm_sequencer #(SPI_seq_item);
    7               1                    ***0***       `uvm_component_utils(SPI_sequencer);
    7               2                    ***0***     
    7               3                    ***0***     
    8                                                  function new(string name = "SPI_sequencer",uvm_component parent = null);
    9               1                    ***0***         super.new(name,parent);


=================================================================================
=== Instance: /SPI_pkg_agent
=== Design Unit: work.SPI_pkg_agent
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         8         3         5    37.50%

================================Branch Details================================

Branch Coverage for instance /SPI_pkg_agent

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File ../SPI/SPI_agent.sv
------------------------------------IF Branch------------------------------------
    21                                         1     Count coming in to IF
    21              1                    ***0***           if (!uvm_config_db#(SPI_config_obj)::get(this, "", "CFG_spi", SPI_cfg)) begin
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    22                                   ***0***     Count coming in to IF
    22              1                    ***0***             `uvm_fatal("bulid_phase", "unable to get congiguration object")
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    24                                         1     Count coming in to IF
    24              1                    ***0***           if (SPI_cfg.is_active == UVM_ACTIVE) begin
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    33                                         1     Count coming in to IF
    33              1                    ***0***           if (SPI_cfg.is_active == UVM_ACTIVE) begin
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      15         8         7    53.33%

================================Statement Details================================

Statement Coverage for instance /SPI_pkg_agent --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File ../SPI/SPI_agent.sv
    1                                                package SPI_pkg_agent;
    2                                                  import uvm_pkg::*;
    3                                                  import SPI_sequencer_pkg::*;
    4                                                  import SPI_driver_pkg::*;
    5                                                  import SPI_pkg_mon::*;
    6                                                  import SPI_pkg_obj::*;
    7                                                  import SPI_seq_item_pkg::*;
    8                                                  `include "uvm_macros.svh"
    9                                                  class SPI_agent extends uvm_agent;
    10              1                    ***0***         `uvm_component_utils(SPI_agent)
    10              2                    ***0***     
    10              3                          2     
    11                                                   SPI_sequencer sqr;
    12                                                   SPI_driver drv;
    13                                                   SPI_mon mon;
    14                                                   SPI_config_obj SPI_cfg;
    15                                                   uvm_analysis_port #(SPI_seq_item) agt_ap;
    16                                                   function new(string name = "SPI_agent", uvm_component parent = null);
    17              1                          1           super.new(name, parent);
    18                                                   endfunction
    19                                                   function void build_phase(uvm_phase phase);
    20              1                          1           super.build_phase(phase);
    21                                                     if (!uvm_config_db#(SPI_config_obj)::get(this, "", "CFG_spi", SPI_cfg)) begin
    22              1                    ***0***             `uvm_fatal("bulid_phase", "unable to get congiguration object")
    23                                                     end
    24                                                     if (SPI_cfg.is_active == UVM_ACTIVE) begin
    25              1                    ***0***             sqr = SPI_sequencer::type_id::create("sqr", this);
    26              1                    ***0***             drv = SPI_driver::type_id::create("drv", this);
    27                                                     end
    28              1                          1           mon = SPI_mon::type_id::create("mon", this);
    29              1                          1           agt_ap = new("agt_ap", this);
    30                                                   endfunction
    31                                                   function void connect_phase(uvm_phase phase);
    32              1                          1           super.connect_phase(phase);
    33                                                     if (SPI_cfg.is_active == UVM_ACTIVE) begin
    34              1                    ***0***             drv.SPI_vif = SPI_cfg.SPI_vif;
    35              1                    ***0***             drv.seq_item_port.connect(sqr.seq_item_export);
    36                                                     end
    37              1                          1           mon.SPI_vif = SPI_cfg.SPI_vif;
    38              1                          1           mon.mon_ap.connect(agt_ap);


=================================================================================
=== Instance: /SPI_env_pkg
=== Design Unit: work.SPI_env_pkg
=================================================================================
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      11         9         2    81.81%

================================Statement Details================================

Statement Coverage for instance /SPI_env_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File ../SPI/SPI_env.sv
    1                                                package SPI_env_pkg;
    2                                                import uvm_pkg::*;
    3                                                import SPI_pkg_agent::*;
    4                                                import SPI_pkg_score::*;
    5                                                import SPI_pkg_cover::*;
    6                                                `include "uvm_macros.svh"
    7                                                
    8                                                class SPI_env extends uvm_env;
    9                                                  // Do the essentials (factory register & Constructor)
    10              1                    ***0***       `uvm_component_utils(SPI_env)
    10              2                    ***0***     
    10              3                          2     
    11                                                 SPI_agent agt;
    12                                                 SPI_scoreboard sb;
    13                                                 SPI_coverage cov;
    14                                                 function new(string name = "SPI_env",uvm_component parent = null);
    15              1                          1         super.new(name,parent);
    16                                                 endfunction
    17                                                 // Build the driver in the build phase
    18                                                 function void build_phase(uvm_phase phase);
    19              1                          1         super.build_phase(phase);
    20              1                          1         agt = SPI_agent::type_id::create("agt",this);
    21              1                          1         sb = SPI_scoreboard::type_id::create("sb",this);
    22              1                          1         cov = SPI_coverage::type_id::create("cov",this);
    23                                                 endfunction
    24                                                 function void connect_phase(uvm_phase phase);
    25              1                          1         super.connect_phase(phase);
    26              1                          1         agt.agt_ap.connect(sb.sb_export);
    27              1                          1         agt.agt_ap.connect(cov.cov_export);


=================================================================================
=== Instance: /RAM_seq_item_pkg
=== Design Unit: work.RAM_seq_item_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        10         0        10     0.00%

================================Branch Details================================

Branch Coverage for instance /RAM_seq_item_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File ../RAM/RAM_seq_item.sv
------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               1                    ***0***       `uvm_object_utils(RAM_seq_item)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               2                    ***0***       `uvm_object_utils(RAM_seq_item)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               3                    ***0***       `uvm_object_utils(RAM_seq_item)
    7               4                    ***0***       `uvm_object_utils(RAM_seq_item)
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               5                    ***0***       `uvm_object_utils(RAM_seq_item)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               6                    ***0***       `uvm_object_utils(RAM_seq_item)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       2         0         2     0.00%

================================Condition Details================================

Condition Coverage for instance /RAM_seq_item_pkg --

  File ../RAM/RAM_seq_item.sv
----------------Focused Condition View-------------------
Line       7 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       7 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:    ***0***  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      15         2        13    13.33%

================================Statement Details================================

Statement Coverage for instance /RAM_seq_item_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File ../RAM/RAM_seq_item.sv
    1                                                package RAM_seq_item_pkg;
    2                                                import RAM_shared_pkg::*;
    3                                                import uvm_pkg::*;
    4                                                `include "uvm_macros.svh"
    5                                                
    6                                                class RAM_seq_item extends uvm_sequence_item;
    7               1                    ***0***       `uvm_object_utils(RAM_seq_item)
    7               2                    ***0***     
    7               3                    ***0***     
    7               4                    ***0***     
    7               5                    ***0***     
    7               6                    ***0***     
    7               7                    ***0***     
    7               8                    ***0***     
    7               9                    ***0***     
    7              10                    ***0***     
    8               1                       3002       int din_saved = 5;
    9                                                  rand logic [9:0] din;
    10                                                 rand logic rst_n, rx_valid;
    11                                                 logic [7:0] dout, dout_ref;
    12                                                 logic tx_valid, tx_valid_ref;
    13                                                 function new(string name = "RAM_seq_item");
    14              1                       3002         super.new(name);
    15                                                 endfunction
    16                                                 function string convert2string();
    17              1                    ***0***         return $sformatf("%s", super.convert2string());
    18                                                 endfunction
    19                                                 function string convert2string_stimulus();
    20              1                    ***0***         return $sformatf("din = %b, rst_n = %b, rx_valid = %b, dout = %b, tx_valid = %b",
    21                                                   din, rst_n, rx_valid, dout, tx_valid);
    22                                                 endfunction
    23                                                 
    24                                                 constraint reset {
    25                                                   rst_n      dist {1:/97,0:/3};
    26                                                 }
    27                                                 constraint rx_valid_c {
    28                                                   rx_valid  dist{1:/70,0:/30};
    29                                                 }
    30                                               
    31                                                 constraint rd_only{
    32                                                   if(din_saved == 2'b10)
    33                                                   din[9:8] inside {2'b10, 2'b11};
    34                                                   else 
    35                                                   din[9:8] == 2'b10;
    36                                                 }
    37                                               
    38                                                 constraint wr_only{
    39                                                   if(din_saved == 2'b00)
    40                                                   din[9:8] inside {2'b00, 2'b01};
    41                                                   else 
    42                                                   din[9:8] == 2'b00;
    43                                                 }
    44                                               
    45                                                 constraint wr_rd_random {
    46                                                   if (din_saved == 2'b00) {
    47                                                     din[9:8] inside {2'b00, 2'b01};
    48                                                   } else if (din_saved == 2'b01) {
    49                                                     din[9:8] dist {2'b10 := 60, 2'b00 := 40};
    50                                                   } else if (din_saved == 2'b10) {
    51                                                     din[9:8] inside {2'b10, 2'b11};
    52                                                   } else if (din_saved == 2'b11) {
    53                                                     din[9:8] dist {2'b10 := 40, 2'b00 := 60};
    54                                                   } else {
    55                                                     din[9:8] == 2'b00;
    56                                                 }
    57                                               }
    58                                                 function void post_randomize(); // Happens after randomization
    59              1                    ***0***         din_saved = din[9:8];


=================================================================================
=== Instance: /RAM_pkg_cover
=== Design Unit: work.RAM_pkg_cover
=================================================================================

Covergroup Coverage:
    Covergroups                      1        na        na    97.14%
        Coverpoints/Crosses          5        na        na        na
            Covergroup Bins         13        12         1    92.30%
----------------------------------------------------------------------------------------------------------
Covergroup                                             Metric       Goal       Bins    Status               
                                                                                                         
----------------------------------------------------------------------------------------------------------
 TYPE /RAM_pkg_cover/RAM_coverage/cvr_grp              97.14%        100          -    Uncovered            
    covered/total bins:                                    12         13          -                      
    missing/total bins:                                     1         13          -                      
    % Hit:                                             92.30%        100          -                      
    Coverpoint din_cp                                  85.71%        100          -    Uncovered            
        covered/total bins:                                 6          7          -                      
        missing/total bins:                                 1          7          -                      
        % Hit:                                         85.71%        100          -                      
    Coverpoint rx_cp                                  100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint tx_cp                                  100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
    Cross din_cross_rx                                100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
    Cross din_cross_tx                                100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
 Covergroup instance \/RAM_pkg_cover::RAM_coverage::cvr_grp  
                                                       97.14%        100          -    Uncovered            
    covered/total bins:                                    12         13          -                      
    missing/total bins:                                     1         13          -                      
    % Hit:                                             92.30%        100          -                      
    Coverpoint din_cp                                  85.71%        100          -    Uncovered            
        covered/total bins:                                 6          7          -                      
        missing/total bins:                                 1          7          -                      
        % Hit:                                         85.71%        100          -                      
        bin din_values[0]                                1214          1          -    Covered              
        bin din_values[1]                                 442          1          -    Covered              
        bin din_values[2]                                 544          1          -    Covered              
        bin din_values[3]                                 801          1          -    Covered              
        bin wrdata_after_wraddress                         15          1          -    Covered              
        bin rddata_after_rdaddress                         12          1          -    Covered              
        bin wradd_wrdata_rdadd_rddata                       0          1          -    ZERO                 
    Coverpoint rx_cp                                  100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                      2427          1          -    Covered              
        bin auto[1]                                       574          1          -    Covered              
    Coverpoint tx_cp                                  100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                      2877          1          -    Covered              
        bin auto[1]                                       124          1          -    Covered              
    Cross din_cross_rx                                100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin din_values_rx_high                        574          1          -    Covered              
    Cross din_cross_tx                                100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin rd_data_tx_high                           124          1          -    Covered              
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      14        12         2    85.71%

================================Statement Details================================

Statement Coverage for instance /RAM_pkg_cover --
NOTE: The modification timestamp for source file '../RAM/RAM_coverage.sv' has been altered since compilation.

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File ../RAM/RAM_coverage.sv
    1                                                package RAM_pkg_cover;
    2                                                    import uvm_pkg::*;
    3                                                    import RAM_seq_item_pkg::*;
    4                                                    import RAM_shared_pkg::*;
    5                                                    `include "uvm_macros.svh"
    6                                                    class RAM_coverage extends uvm_component;
    7               1                    ***0***             `uvm_component_utils(RAM_coverage)
    7               2                    ***0***     
    7               3                          2     
    8                                                        uvm_analysis_export #(RAM_seq_item) cov_export;
    9                                                        uvm_tlm_analysis_fifo #(RAM_seq_item) cov_fifo;
    10                                                       RAM_seq_item seq_item_cov;
    11                                                       covergroup cvr_grp;
    12                                                           
    13                                                           din_cp: coverpoint seq_item_cov.din[9:8]{
    14                                                               bins din_values[] = {[0:3]};
    15                                                               bins wrdata_after_wraddress = (2'b00=>2'b01);
    16                                                               bins rddata_after_rdaddress = (2'b10=>2'b11);
    17                                                               bins wradd_wrdata_rdadd_rddata = (2'b00=>2'b01=>2'b10=>2'b11);
    18                                                           }
    19                                                           rx_cp: coverpoint seq_item_cov.rx_valid;
    20                                                           tx_cp: coverpoint seq_item_cov.tx_valid;
    21                                               
    22                                               
    23                                                           din_cross_rx: cross din_cp, rx_cp{
    24                                                               option.cross_auto_bin_max = 0;
    25                                                               bins din_values_rx_high = binsof(din_cp.din_values) && binsof(rx_cp) intersect{1};
    26                                                               
    27                                                           }
    28                                               
    29                                               
    30                                                           din_cross_tx: cross din_cp, tx_cp {
    31                                                               option.cross_auto_bin_max = 0;
    32                                                               bins rd_data_tx_high = binsof(din_cp.din_values) intersect{3} && binsof(tx_cp) intersect{1};
    33                                                           }
    34                                                       endgroup
    35                                               
    36                                                       function new(string name = "RAM_coverage",uvm_component parent = null);
    37                                                           super.new(name,parent);
    38                                                           cvr_grp=new();
    39                                                       endfunction
    40              1                          1             function void build_phase(uvm_phase phase);
    41              1                          1                 super.build_phase(phase);
    42                                                           cov_export = new("cov_export",this);
    43                                                           cov_fifo = new("cov_fifo",this);
    44              1                          1             endfunction
    45              1                          1             function void connect_phase(uvm_phase phase);
    46              1                          1                 super.connect_phase(phase);
    47                                                           cov_export.connect(cov_fifo.analysis_export);
    48                                                       endfunction
    49              1                          1             task run_phase(uvm_phase phase);
    50              1                          1                 super.run_phase(phase);
    51                                                           forever begin
    52                                                               cov_fifo.get(seq_item_cov);
    53              1                          1                     cvr_grp.sample();
    54              1                          1                 end
    55              1                       3002             endtask
    56              1                       3001         endclass


=================================================================================
=== Instance: /RAM_pkg_score
=== Design Unit: work.RAM_pkg_score
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        10         4         6    40.00%

================================Branch Details================================

Branch Coverage for instance /RAM_pkg_score
NOTE: The modification timestamp for source file '../RAM/RAM_score.sv' has been altered since compilation.

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File ../RAM/RAM_score.sv
------------------------------------IF Branch------------------------------------
    40                                      3001     Count coming in to IF
    40              1                    ***0***                         dout_ref = %0b, tx_valid_ref = %0b",seq_item_sb.convert2string_stimulus(),seq_item_sb.dout_ref,seq_item_sb.tx_valid_ref));
    45              1                       3001                         correct_count++;
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    41                                   ***0***     Count coming in to IF
    41              1                    ***0***                         error_count++;
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    46                                      3001     Count coming in to IF
    46              1                    ***0***                     end
                                            3001     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    71                                         1     Count coming in to IF
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    72                                         1     Count coming in to IF
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       2         0         2     0.00%

================================Condition Details================================

Condition Coverage for instance /RAM_pkg_score --
NOTE: The modification timestamp for source file '../RAM/RAM_score.sv' has been altered since compilation.

  File ../RAM/RAM_score.sv
----------------Focused Condition View-------------------
Line       40 Item    1  ((this.seq_item_sb.dout_ref != this.seq_item_sb.dout) || (this.seq_item_sb.tx_valid_ref != this.seq_item_sb.tx_valid))
Condition totals: 0 of 2 input terms covered = 0.00%

                                                    Input Term   Covered  Reason for no coverage   Hint
                                                   -----------  --------  -----------------------  --------------
          (this.seq_item_sb.dout_ref != this.seq_item_sb.dout)         N  '_1' not hit             Hit '_1'
  (this.seq_item_sb.tx_valid_ref != this.seq_item_sb.tx_valid)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target                                                      Non-masking condition(s)      
 ---------  ---------  --------------------                                            -------------------------     
  Row   1:          1  (this.seq_item_sb.dout_ref != this.seq_item_sb.dout)_0          ~(this.seq_item_sb.tx_valid_ref != this.seq_item_sb.tx_valid)
  Row   2:    ***0***  (this.seq_item_sb.dout_ref != this.seq_item_sb.dout)_1          -                             
  Row   3:          1  (this.seq_item_sb.tx_valid_ref != this.seq_item_sb.tx_valid)_0  ~(this.seq_item_sb.dout_ref != this.seq_item_sb.dout)
  Row   4:    ***0***  (this.seq_item_sb.tx_valid_ref != this.seq_item_sb.tx_valid)_1  ~(this.seq_item_sb.dout_ref != this.seq_item_sb.dout)


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      21        16         5    76.19%

================================Statement Details================================

Statement Coverage for instance /RAM_pkg_score --
NOTE: The modification timestamp for source file '../RAM/RAM_score.sv' has been altered since compilation.

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File ../RAM/RAM_score.sv
    1                                                package RAM_pkg_score;
    2                                                    import uvm_pkg::*;
    3                                                    import RAM_seq_item_pkg::*;
    4                                                    import RAM_shared_pkg::*;
    5                                                    `include "uvm_macros.svh"
    6                                                    class RAM_scoreboard extends uvm_scoreboard;
    7               1                    ***0***             `uvm_component_utils(RAM_scoreboard)
    7               2                    ***0***     
    7               3                          2     
    8                                                        uvm_analysis_export #(RAM_seq_item) sb_export;
    9                                                        uvm_tlm_analysis_fifo #(RAM_seq_item) sb_fifo;
    10                                                       RAM_seq_item seq_item_sb;
    11                                                     
    12              1                          1             int error_count=0;
    13              1                          1             int correct_count=0;
    14                                                       
    15                                                       bit [7:0] MEM [255:0];
    16                                                       bit [7:0] Rd_Addr, Wr_Addr;
    17                                                       
    18                                                       uvm_analysis_port #(RAM_seq_item) agt_ap;
    19                                                       function new(string name = "RAM_scoreboard",uvm_component parent = null);
    20                                                           super.new(name,parent);
    21                                                       endfunction
    22              1                          1             function void build_phase(uvm_phase phase);
    23                                                           super.build_phase(phase);
    24                                                           sb_export = new("sb_export",this);
    25              1                          1                 sb_fifo = new("sb_fifo",this);
    26              1                          1             endfunction
    27              1                          1             function void connect_phase(uvm_phase phase);
    28                                                           super.connect_phase(phase);
    29                                                           sb_export.connect(sb_fifo.analysis_export);
    30              1                          1             endfunction
    31              1                          1             task run_phase(uvm_phase phase);
    32                                                           super.run_phase(phase);
    33                                                           //MEM = '{256{8'b0}};
    34              1                          1                 forever begin
    35                                               
    36              1                          1                     sb_fifo.get(seq_item_sb);
    37                                                               //ref_model(seq_item_sb);
    38              1                       3002                     if(seq_item_sb.dout_ref != seq_item_sb.dout || seq_item_sb.tx_valid_ref != seq_item_sb.tx_valid) begin
    39                                                                   `uvm_error("run_phase",$sformatf("Comparison failed, transactions recieved by the DUT:%s while the 
    40                                                                   dout_ref = %0b, tx_valid_ref = %0b",seq_item_sb.convert2string_stimulus(),seq_item_sb.dout_ref,seq_item_sb.tx_valid_ref));
    41              1                    ***0***                         error_count++;
    42                                                               end
    43              1                    ***0***                     else begin
    44                                                                   `uvm_info("run_phase", $sformatf("Correct output:%s",seq_item_sb.convert2string_stimulus()),UVM_HIGH);
    45                                                                   correct_count++;
    46              1                    ***0***                     end
    47              1                       3001                 end
    48                                                       endtask
    49                                                       function void report_phase(uvm_phase phase);
    50                                                           super.report_phase(phase);
    51                                                           `uvm_info("report_phase",$sformatf("Total successful transactions: %0d",correct_count),UVM_MEDIUM);
    52                                                           `uvm_info("report_phase",$sformatf("Total failed transactions: %0d",error_count),UVM_MEDIUM);
    53                                                       endfunction
    54                                                   endclass
    55                                               endpackage
    1                                                package RAM_pkg_score;
    2                                                    import uvm_pkg::*;
    3                                                    import RAM_seq_item_pkg::*;
    4                                                    import RAM_shared_pkg::*;
    5                                                    `include "uvm_macros.svh"
    6                                                    class RAM_scoreboard extends uvm_scoreboard;
    7                                                        `uvm_component_utils(RAM_scoreboard)
    8                                                        uvm_analysis_export #(RAM_seq_item) sb_export;
    9                                                        uvm_tlm_analysis_fifo #(RAM_seq_item) sb_fifo;
    10                                                       RAM_seq_item seq_item_sb;
    11                                                     
    12                                                       int error_count=0;
    13                                                       int correct_count=0;
    14                                                       
    15                                                       bit [7:0] MEM [255:0];
    16                                                       bit [7:0] Rd_Addr, Wr_Addr;
    17                                                       
    18                                                       uvm_analysis_port #(RAM_seq_item) agt_ap;
    19                                                       function new(string name = "RAM_scoreboard",uvm_component parent = null);
    20                                                           super.new(name,parent);
    21                                                       endfunction
    22                                                       function void build_phase(uvm_phase phase);
    23                                                           super.build_phase(phase);
    24                                                           sb_export = new("sb_export",this);
    25                                                           sb_fifo = new("sb_fifo",this);
    26                                                       endfunction
    27                                                       function void connect_phase(uvm_phase phase);
    28                                                           super.connect_phase(phase);
    29                                                           sb_export.connect(sb_fifo.analysis_export);
    30                                                       endfunction
    31                                                       task run_phase(uvm_phase phase);
    32                                                           super.run_phase(phase);
    33                                                           //MEM = '{256{8'b0}};
    34                                                           forever begin
    35                                               
    36                                                               sb_fifo.get(seq_item_sb);
    37                                                               //ref_model(seq_item_sb);
    38                                                               if(seq_item_sb.dout_ref != seq_item_sb.dout || seq_item_sb.tx_valid_ref != seq_item_sb.tx_valid) begin
    39                                                                   `uvm_error("run_phase",$sformatf("Comparison failed, transactions recieved by the DUT:%s while the 
    40                                                                   dout_ref = %0b, tx_valid_ref = %0b",seq_item_sb.convert2string_stimulus(),seq_item_sb.dout_ref,seq_item_sb.tx_valid_ref));
    41                                                                   error_count++;
    42                                                               end
    43                                                               else begin
    44                                                                   `uvm_info("run_phase", $sformatf("Correct output:%s",seq_item_sb.convert2string_stimulus()),UVM_HIGH);
    45                                                                   correct_count++;
    46                                                               end
    47                                                           end
    48                                                       endtask
    49                                                       function void report_phase(uvm_phase phase);
    50                                                           super.report_phase(phase);
    51                                                           `uvm_info("report_phase",$sformatf("Total successful transactions: %0d",correct_count),UVM_MEDIUM);
    52                                                           `uvm_info("report_phase",$sformatf("Total failed transactions: %0d",error_count),UVM_MEDIUM);
    53                                                       endfunction
    54                                                   endclass
    55                                               endpackage
    1                                                package RAM_pkg_score;
    2                                                    import uvm_pkg::*;
    3                                                    import RAM_seq_item_pkg::*;
    4                                                    import RAM_shared_pkg::*;
    5                                                    `include "uvm_macros.svh"
    6                                                    class RAM_scoreboard extends uvm_scoreboard;
    7                                                        `uvm_component_utils(RAM_scoreboard)
    8                                                        uvm_analysis_export #(RAM_seq_item) sb_export;
    9                                                        uvm_tlm_analysis_fifo #(RAM_seq_item) sb_fifo;
    10                                                       RAM_seq_item seq_item_sb;
    11                                                     
    12                                                       int error_count=0;
    13                                                       int correct_count=0;
    14                                                       
    15                                                       bit [7:0] MEM [255:0];
    16                                                       bit [7:0] Rd_Addr, Wr_Addr;
    17                                                       
    18                                                       uvm_analysis_port #(RAM_seq_item) agt_ap;
    19                                                       function new(string name = "RAM_scoreboard",uvm_component parent = null);
    20                                                           super.new(name,parent);
    21                                                       endfunction
    22                                                       function void build_phase(uvm_phase phase);
    23                                                           super.build_phase(phase);
    24                                                           sb_export = new("sb_export",this);
    25                                                           sb_fifo = new("sb_fifo",this);
    26                                                       endfunction
    27                                                       function void connect_phase(uvm_phase phase);
    28                                                           super.connect_phase(phase);
    29                                                           sb_export.connect(sb_fifo.analysis_export);
    30                                                       endfunction
    31                                                       task run_phase(uvm_phase phase);
    32                                                           super.run_phase(phase);
    33                                                           //MEM = '{256{8'b0}};
    34                                                           forever begin
    35                                               
    36                                                               sb_fifo.get(seq_item_sb);
    37                                                               //ref_model(seq_item_sb);
    38                                                               if(seq_item_sb.dout_ref != seq_item_sb.dout || seq_item_sb.tx_valid_ref != seq_item_sb.tx_valid) begin
    39                                                                   `uvm_error("run_phase",$sformatf("Comparison failed, transactions recieved by the DUT:%s while the 
    40                                                                   dout_ref = %0b, tx_valid_ref = %0b",seq_item_sb.convert2string_stimulus(),seq_item_sb.dout_ref,seq_item_sb.tx_valid_ref));
    41                                                                   error_count++;
    42                                                               end
    43                                                               else begin
    44                                                                   `uvm_info("run_phase", $sformatf("Correct output:%s",seq_item_sb.convert2string_stimulus()),UVM_HIGH);
    45                                                                   correct_count++;
    46                                                               end
    47                                                           end
    48                                                       endtask
    49                                                       function void report_phase(uvm_phase phase);
    50                                                           super.report_phase(phase);
    51                                                           `uvm_info("report_phase",$sformatf("Total successful transactions: %0d",correct_count),UVM_MEDIUM);
    52                                                           `uvm_info("report_phase",$sformatf("Total failed transactions: %0d",error_count),UVM_MEDIUM);
    53                                                       endfunction
    54                                                   endclass
    55                                               endpackage


=================================================================================
=== Instance: /RAM_pkg_obj
=== Design Unit: work.RAM_pkg_obj
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        10         0        10     0.00%

================================Branch Details================================

Branch Coverage for instance /RAM_pkg_obj

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File ../RAM/RAM_config_obj.sv
------------------------------------IF Branch------------------------------------
    5                                    ***0***     Count coming in to IF
    5               1                    ***0***             `uvm_object_utils(RAM_config_obj)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    5                                    ***0***     Count coming in to IF
    5               2                    ***0***             `uvm_object_utils(RAM_config_obj)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    5                                    ***0***     Count coming in to IF
    5               3                    ***0***             `uvm_object_utils(RAM_config_obj)
    5               4                    ***0***             `uvm_object_utils(RAM_config_obj)
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    5                                    ***0***     Count coming in to IF
    5               5                    ***0***             `uvm_object_utils(RAM_config_obj)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    5                                    ***0***     Count coming in to IF
    5               6                    ***0***             `uvm_object_utils(RAM_config_obj)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       2         0         2     0.00%

================================Condition Details================================

Condition Coverage for instance /RAM_pkg_obj --

  File ../RAM/RAM_config_obj.sv
----------------Focused Condition View-------------------
Line       5 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       5 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:    ***0***  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      11         1        10     9.09%

================================Statement Details================================

Statement Coverage for instance /RAM_pkg_obj --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File ../RAM/RAM_config_obj.sv
    1                                                package RAM_pkg_obj;
    2                                                import uvm_pkg::*;
    3                                                `include "uvm_macros.svh"
    4                                                    class RAM_config_obj extends uvm_object;
    5               1                    ***0***             `uvm_object_utils(RAM_config_obj)
    5               2                    ***0***     
    5               3                    ***0***     
    5               4                    ***0***     
    5               5                    ***0***     
    5               6                    ***0***     
    5               7                    ***0***     
    5               8                    ***0***     
    5               9                    ***0***     
    5              10                    ***0***     
    6                                                        virtual RAM_if RAM_vif;
    7                                                        uvm_active_passive_enum is_active;
    8                                                        function new(string name = "RAM_config_obj");
    9               1                          1                 super.new(name);


=================================================================================
=== Instance: /RAM_pkg_mon
=== Design Unit: work.RAM_pkg_mon
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         2         1         1    50.00%

================================Branch Details================================

Branch Coverage for instance /RAM_pkg_mon

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File ../RAM/RAM_mon.sv
------------------------------------IF Branch------------------------------------
    31                                      3001     Count coming in to IF
    31              1                    ***0***                     `uvm_info("run_phase",rsp_seq_item.convert2string_stimulus(),UVM_HIGH) 
                                            3001     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      19        16         3    84.21%

================================Statement Details================================

Statement Coverage for instance /RAM_pkg_mon --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File ../RAM/RAM_mon.sv
    1                                                package RAM_pkg_mon;
    2                                                    import uvm_pkg::*;
    3                                                    import RAM_seq_item_pkg::*;
    4                                                    import RAM_shared_pkg::*;
    5                                                    `include "uvm_macros.svh"
    6                                                    class RAM_mon extends uvm_monitor;
    7               1                    ***0***             `uvm_component_utils(RAM_mon)
    7               2                    ***0***     
    7               3                          2     
    8                                                        virtual RAM_if RAM_vif;
    9                                                        RAM_seq_item rsp_seq_item;
    10                                                       uvm_analysis_port #(RAM_seq_item) mon_ap;
    11                                                       function new(string name = "RAM_mon",uvm_component parent = null);
    12              1                          1                 super.new(name,parent);
    13                                                       endfunction
    14                                                       function void build_phase(uvm_phase phase);
    15              1                          1                 super.build_phase(phase);
    16              1                          1                 mon_ap=new("mon_ap",this);
    17                                                       endfunction
    18                                                       task run_phase(uvm_phase phase);
    19              1                          1                 super.run_phase(phase);
    20              1                          1                 forever begin
    21              1                       3002                     rsp_seq_item = RAM_seq_item::type_id::create("rsp_seq_item");
    22              1                       3002                         @(negedge RAM_vif.clk);
    23              1                       3001                         rsp_seq_item.dout=RAM_vif.dout;
    24              1                       3001                         rsp_seq_item.rst_n=RAM_vif.rst_n;
    25              1                       3001                         rsp_seq_item.tx_valid=RAM_vif.tx_valid;
    26              1                       3001                         rsp_seq_item.rx_valid=RAM_vif.rx_valid;
    27              1                       3001                         rsp_seq_item.din=RAM_vif.din;
    28              1                       3001                         rsp_seq_item.tx_valid_ref=RAM_vif.tx_valid_ref;
    29              1                       3001                         rsp_seq_item.dout_ref=RAM_vif.dout_ref;
    30              1                       3001                     mon_ap.write(rsp_seq_item);
    31              1                    ***0***                     `uvm_info("run_phase",rsp_seq_item.convert2string_stimulus(),UVM_HIGH) 


=================================================================================
=== Instance: /RAM_driver_pkg
=== Design Unit: work.RAM_driver_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         2         0         2     0.00%

================================Branch Details================================

Branch Coverage for instance /RAM_driver_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File ../RAM/RAM_driver.sv
------------------------------------IF Branch------------------------------------
    22                                   ***0***     Count coming in to IF
    22              1                    ***0***                     `uvm_info("run_phase",stim_seq_item.convert2string_stimulus(),UVM_HIGH) 
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      14         0        14     0.00%

================================Statement Details================================

Statement Coverage for instance /RAM_driver_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File ../RAM/RAM_driver.sv
    1                                                package RAM_driver_pkg;
    2                                                    import uvm_pkg::*;
    3                                                    import RAM_seq_item_pkg::*;
    4                                                    `include "uvm_macros.svh"
    5                                                    class RAM_driver extends uvm_driver #(RAM_seq_item);
    6               1                    ***0***             `uvm_component_utils(RAM_driver)
    6               2                    ***0***     
    6               3                    ***0***     
    7                                                        virtual RAM_if RAM_vif;
    8                                                        RAM_seq_item stim_seq_item;
    9                                                        function new(string name = "RAM_driver",uvm_component parent = null);
    10              1                    ***0***                 super.new(name,parent);
    11                                                       endfunction
    12                                                       task run_phase(uvm_phase phase);
    13              1                    ***0***                 super.run_phase(phase);
    14              1                    ***0***                 forever begin
    15              1                    ***0***                     stim_seq_item = RAM_seq_item::type_id::create("stim_seq_item");
    16              1                    ***0***                     seq_item_port.get_next_item(stim_seq_item);
    17              1                    ***0***                     RAM_vif.din=stim_seq_item.din;
    18              1                    ***0***                     RAM_vif.rst_n=stim_seq_item.rst_n;
    19              1                    ***0***                     RAM_vif.rx_valid=stim_seq_item.rx_valid;
    20              1                    ***0***                     @(negedge RAM_vif.clk);
    21              1                    ***0***                     seq_item_port.item_done();
    22              1                    ***0***                     `uvm_info("run_phase",stim_seq_item.convert2string_stimulus(),UVM_HIGH) 


=================================================================================
=== Instance: /RAM_sequencer_pkg
=== Design Unit: work.RAM_sequencer_pkg
=================================================================================
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                       4         0         4     0.00%

================================Statement Details================================

Statement Coverage for instance /RAM_sequencer_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File ../RAM/RAM_sequencer.sv
    1                                                package RAM_sequencer_pkg;
    2                                                import uvm_pkg::*;
    3                                                import RAM_seq_item_pkg::*;
    4                                                `include "uvm_macros.svh"
    5                                                
    6                                                class RAM_sequencer extends uvm_sequencer #(RAM_seq_item);
    7               1                    ***0***       `uvm_component_utils(RAM_sequencer);
    7               2                    ***0***     
    7               3                    ***0***     
    8                                                  function new(string name = "RAM_sequencer",uvm_component parent = null);
    9               1                    ***0***         super.new(name,parent);


=================================================================================
=== Instance: /RAM_pkg_agent
=== Design Unit: work.RAM_pkg_agent
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         8         3         5    37.50%

================================Branch Details================================

Branch Coverage for instance /RAM_pkg_agent

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File ../RAM/RAM_agent.sv
------------------------------------IF Branch------------------------------------
    21                                         1     Count coming in to IF
    21              1                    ***0***           if (!uvm_config_db#(RAM_config_obj)::get(this, "", "CFG_ram", RAM_cfg)) begin
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    22                                   ***0***     Count coming in to IF
    22              1                    ***0***             `uvm_fatal("bulid_phase", "unable to get congiguration object")
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    24                                         1     Count coming in to IF
    24              1                    ***0***           if (RAM_cfg.is_active == UVM_ACTIVE) begin
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    34                                         1     Count coming in to IF
    34              1                    ***0***           if (RAM_cfg.is_active == UVM_ACTIVE) begin
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      15         8         7    53.33%

================================Statement Details================================

Statement Coverage for instance /RAM_pkg_agent --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File ../RAM/RAM_agent.sv
    1                                                package RAM_pkg_agent;
    2                                                  import uvm_pkg::*;
    3                                                  import RAM_sequencer_pkg::*;
    4                                                  import RAM_driver_pkg::*;
    5                                                  import RAM_pkg_mon::*;
    6                                                  import RAM_pkg_obj::*;
    7                                                  import RAM_seq_item_pkg::*;
    8                                                  `include "uvm_macros.svh"
    9                                                  class RAM_agent extends uvm_agent;
    10              1                    ***0***         `uvm_component_utils(RAM_agent)
    10              2                    ***0***     
    10              3                          2     
    11                                                   RAM_sequencer sqr;
    12                                                   RAM_driver drv;
    13                                                   RAM_mon mon;
    14                                                   RAM_config_obj RAM_cfg;
    15                                                   uvm_analysis_port #(RAM_seq_item) agt_ap;
    16                                                   function new(string name = "RAM_agent", uvm_component parent = null);
    17              1                          1           super.new(name, parent);
    18                                                   endfunction
    19                                                   function void build_phase(uvm_phase phase);
    20              1                          1           super.build_phase(phase);
    21                                                     if (!uvm_config_db#(RAM_config_obj)::get(this, "", "CFG_ram", RAM_cfg)) begin
    22              1                    ***0***             `uvm_fatal("bulid_phase", "unable to get congiguration object")
    23                                                     end
    24                                                     if (RAM_cfg.is_active == UVM_ACTIVE) begin
    25                                               
    26              1                    ***0***             sqr = RAM_sequencer::type_id::create("sqr", this);
    27              1                    ***0***             drv = RAM_driver::type_id::create("drv", this);
    28                                                     end
    29              1                          1           mon = RAM_mon::type_id::create("mon", this);
    30              1                          1           agt_ap = new("agt_ap", this);
    31                                                   endfunction
    32                                                   function void connect_phase(uvm_phase phase);
    33              1                          1           super.connect_phase(phase);
    34                                                     if (RAM_cfg.is_active == UVM_ACTIVE) begin
    35                                               
    36              1                    ***0***             drv.RAM_vif = RAM_cfg.RAM_vif;
    37              1                    ***0***             drv.seq_item_port.connect(sqr.seq_item_export);
    38                                                     end
    39              1                          1           mon.mon_ap.connect(agt_ap);
    40              1                          1           mon.RAM_vif = RAM_cfg.RAM_vif;


=================================================================================
=== Instance: /RAM_env_pkg
=== Design Unit: work.RAM_env_pkg
=================================================================================
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      11         9         2    81.81%

================================Statement Details================================

Statement Coverage for instance /RAM_env_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File ../RAM/RAM_env.sv
    1                                                package RAM_env_pkg;
    2                                                import uvm_pkg::*;
    3                                                import RAM_pkg_agent::*;
    4                                                import RAM_pkg_score::*;
    5                                                import RAM_pkg_cover::*;
    6                                                `include "uvm_macros.svh"
    7                                                
    8                                                class RAM_env extends uvm_env;
    9                                                  // Do the essentials (factory register & Constructor)
    10              1                    ***0***       `uvm_component_utils(RAM_env)
    10              2                    ***0***     
    10              3                          2     
    11                                                 RAM_agent agt;
    12                                                 RAM_scoreboard sb;
    13                                                 RAM_coverage cov;
    14                                                 function new(string name = "RAM_env",uvm_component parent = null);
    15              1                          1         super.new(name,parent);
    16                                                 endfunction
    17                                                 // Build the driver in the build phase
    18                                                 function void build_phase(uvm_phase phase);
    19              1                          1         super.build_phase(phase);
    20              1                          1         agt = RAM_agent::type_id::create("agt",this);
    21              1                          1         sb = RAM_scoreboard::type_id::create("sb",this);
    22              1                          1         cov = RAM_coverage::type_id::create("cov",this);
    23                                                 endfunction
    24                                                 function void connect_phase(uvm_phase phase);
    25              1                          1         super.connect_phase(phase);
    26              1                          1         agt.agt_ap.connect(sb.sb_export);
    27              1                          1         agt.agt_ap.connect(cov.cov_export);


=================================================================================
=== Instance: /WRAPPER_seq_item_pkg
=== Design Unit: work.WRAPPER_seq_item_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        22        14         8    63.63%

================================Branch Details================================

Branch Coverage for instance /WRAPPER_seq_item_pkg
NOTE: The modification timestamp for source file 'WRAPPER_seq_item.sv' has been altered since compilation.

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File WRAPPER_seq_item.sv
------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               1                    ***0***       `uvm_object_utils(WRAPPER_seq_item)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    7                                       3001     Count coming in to IF
    7               2                    ***0***       `uvm_object_utils(WRAPPER_seq_item)
                                            3001     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               3                    ***0***       `uvm_object_utils(WRAPPER_seq_item)
    7               4                    ***0***       `uvm_object_utils(WRAPPER_seq_item)
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    7                                       3001     Count coming in to IF
    7               5                    ***0***       `uvm_object_utils(WRAPPER_seq_item)
                                            3001     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               6                    ***0***       `uvm_object_utils(WRAPPER_seq_item)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    66                                      3000     Count coming in to IF
    66              1                         30         if(~rst_n) begin
                                            2970     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    70                                      3000     Count coming in to IF
    70              1                        206         if(count_ss_n == 0)din_saved = din[9:0];
                                            2794     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    75                                      3000     Count coming in to IF
    75              1                       2189         if(count<11) begin
    78              1                        200         else if(count==14)begin
                                             611     All False Count
Branch totals: 3 hits of 3 branches = 100.00%

------------------------------------IF Branch------------------------------------
    83                                      3000     Count coming in to IF
    83              1                        151         if(din_saved[9:8] != 2'b11 && count_ss_n == 14)// Counted from 0->12 (13 cycles)
    85              1                         27         else if(din_saved[9:8] == 2'b11 && count_ss_n == 24)// 23 cycles
                                            2822     All False Count
Branch totals: 3 hits of 3 branches = 100.00%

------------------------------------IF Branch------------------------------------
    94                                      3000     Count coming in to IF
    94              1                        178     
    97              1                       2822       endfunction
Branch totals: 2 hits of 2 branches = 100.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                      10         8         2    80.00%

================================Condition Details================================

Condition Coverage for instance /WRAPPER_seq_item_pkg --
NOTE: The modification timestamp for source file 'WRAPPER_seq_item.sv' has been altered since compilation.

  File WRAPPER_seq_item.sv
----------------Focused Condition View-------------------
Line       7 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       7 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:          1  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             

----------------Focused Condition View-------------------
Line       70 Item    1  (count_ss_n == 0)
Condition totals: 1 of 1 input term covered = 100.00%

         Input Term   Covered  Reason for no coverage   Hint
        -----------  --------  -----------------------  --------------
  (count_ss_n == 0)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (count_ss_n == 0)_0   -                             
  Row   2:          1  (count_ss_n == 0)_1   -                             

----------------Focused Condition View-------------------
Line       75 Item    1  (this.count < 11)
Condition totals: 1 of 1 input term covered = 100.00%

         Input Term   Covered  Reason for no coverage   Hint
        -----------  --------  -----------------------  --------------
  (this.count < 11)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (this.count < 11)_0   -                             
  Row   2:          1  (this.count < 11)_1   -                             

----------------Focused Condition View-------------------
Line       78 Item    1  (this.count == 14)
Condition totals: 1 of 1 input term covered = 100.00%

          Input Term   Covered  Reason for no coverage   Hint
         -----------  --------  -----------------------  --------------
  (this.count == 14)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (this.count == 14)_0  -                             
  Row   2:          1  (this.count == 14)_1  -                             

----------------Focused Condition View-------------------
Line       83 Item    1  ((this.din_saved[9:8] != 3) && (count_ss_n == 14))
Condition totals: 2 of 2 input terms covered = 100.00%

                  Input Term   Covered  Reason for no coverage   Hint
                 -----------  --------  -----------------------  --------------
  (this.din_saved[9:8] != 3)         Y
          (count_ss_n == 14)         Y

     Rows:       Hits  FEC Target                    Non-masking condition(s)      
 ---------  ---------  --------------------          -------------------------     
  Row   1:          1  (this.din_saved[9:8] != 3)_0  -                             
  Row   2:          1  (this.din_saved[9:8] != 3)_1  (count_ss_n == 14)            
  Row   3:          1  (count_ss_n == 14)_0          (this.din_saved[9:8] != 3)    
  Row   4:          1  (count_ss_n == 14)_1          (this.din_saved[9:8] != 3)    

----------------Focused Condition View-------------------
Line       85 Item    1  ((this.din_saved[9:8] == 3) && (count_ss_n == 24))
Condition totals: 2 of 2 input terms covered = 100.00%

                  Input Term   Covered  Reason for no coverage   Hint
                 -----------  --------  -----------------------  --------------
  (this.din_saved[9:8] == 3)         Y
          (count_ss_n == 24)         Y

     Rows:       Hits  FEC Target                    Non-masking condition(s)      
 ---------  ---------  --------------------          -------------------------     
  Row   1:          1  (this.din_saved[9:8] == 3)_0  -                             
  Row   2:          1  (this.din_saved[9:8] == 3)_1  (count_ss_n == 24)            
  Row   3:          1  (count_ss_n == 24)_0          (this.din_saved[9:8] == 3)    
  Row   4:          1  (count_ss_n == 24)_1          (this.din_saved[9:8] == 3)    

----------------Focused Condition View-------------------
Line       94 Item    1  (count_ss_n == 0)
Condition totals: 1 of 1 input term covered = 100.00%

         Input Term   Covered  Reason for no coverage   Hint
        -----------  --------  -----------------------  --------------
  (count_ss_n == 0)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (count_ss_n == 0)_0   -                             
  Row   2:          1  (count_ss_n == 0)_1   -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      27        17        10    62.96%

================================Statement Details================================

Statement Coverage for instance /WRAPPER_seq_item_pkg --
NOTE: The modification timestamp for source file 'WRAPPER_seq_item.sv' has been altered since compilation.

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File WRAPPER_seq_item.sv
    1                                                package WRAPPER_seq_item_pkg;
    2                                                import WRAPPER_shared_pkg::*;
    3                                                import uvm_pkg::*;
    4                                                `include "uvm_macros.svh"
    5                                                
    6                                                class WRAPPER_seq_item extends uvm_sequence_item;
    7               1                    ***0***       `uvm_object_utils(WRAPPER_seq_item)
    7               2                    ***0***     
    7               3                    ***0***     
    7               4                    ***0***     
    7               5                    ***0***     
    7               6                       3001     
    7               7                    ***0***     
    7               8                    ***0***     
    7               9                       3001     
    7              10                    ***0***     
    8               1                       6008       bit [9:0] din_saved = 10'b1111111111;
    9               1                       6008       int count = 0;
    10                                                 logic MOSI;
    11                                                 rand logic rst_n;
    12                                                 logic MISO;
    13                                                 logic SS_n;
    14                                                 rand logic[10:0] din;
    15                                               
    16                                                 function new(string name = "WRAPPER_seq_item");
    17              1                       6008         super.new(name);
    18                                                 endfunction
    19                                                 function string convert2string();
    20              1                    ***0***         return $sformatf("%s", super.convert2string());
    21                                                 endfunction
    22                                                 function string convert2string_stimulus();
    23              1                    ***0***         return $sformatf("MISO = %b, MOSI = %b, rst_n = %b, SS_n = %b",
    24                                                   MISO, MOSI, rst_n, SS_n);
    25                                                 endfunction
    26                                                 constraint reset {
    27                                                   rst_n      dist {1:/99,0:/1};
    28                                                 }
    29                                               
    30                                                 constraint rd_only{
    31                                                   if(count == 0){
    32                                                   if(din_saved[9:8] == 2'b10)
    33                                                   din[10:8] == 3'b111;
    34                                                   else
    35                                                   din[10:8] == 3'b110;
    36                                                   }
    37                                                 }
    38                                               
    39                                                 constraint wr_only{
    40                                                   if(count == 0){
    41                                                   if(din_saved [9:8]== 2'b00)
    42                                                   din[10:8] inside {3'b000, 3'b001};
    43                                                   else 
    44                                                   din[10:8] == 3'b000;
    45                                                   }
    46                                                 }
    47                                               
    48                                                 constraint wr_rd_random {
    49                                                   if(count == 0){
    50                                                   if (din_saved[9:8] == 2'b00) {
    51                                                     din[10:8] inside {3'b000, 3'b001};
    52                                                   } else if (din_saved[9:8] == 2'b01) {
    53                                                     din[10:8] dist {3'b110 := 60, 3'b000 := 40};
    54                                                   } else if (din_saved[9:8] == 2'b10) {
    55                                                     din[10:8] == 3'b111;
    56                                                   } else if (din_saved[9:8] == 2'b11) {
    57                                                     din[10:8] dist {3'b110 := 40, 3'b000 := 60};
    58                                                   } else {
    59                                                     din[10:8] == 3'b000;
    60                                                   } 
    61                                                   }
    62                                               }
    63                                               
    64                                               
    65                                                 function void post_randomize(); // Happens after randomization
    66                                                   if(~rst_n) begin
    67              1                         30           count =0;
    68              1                         30           count_ss_n =0;
    69                                                   end
    70              1                        206         if(count_ss_n == 0)din_saved = din[9:0];
    71                                               
    72              1                       3000             count++;
    73              1                       3000         count_ss_n++;
    74                                               
    75                                                   if(count<11) begin
    76              1                       2189           MOSI = din_saved[10-count];
    77                                                   end
    78                                                   else if(count==14)begin
    79              1                        200           count = 0;
    80                                                     //SS_n = 0;
    81                                                   end
    82                                               
    83                                                   if(din_saved[9:8] != 2'b11 && count_ss_n == 14)// Counted from 0->12 (13 cycles)
    84              1                        151           count_ss_n = 0;
    85                                                   else if(din_saved[9:8] == 2'b11 && count_ss_n == 24)// 23 cycles
    86              1                         27           count_ss_n = 0;
    87                                               
    88                                                 if(count_ss_n == 0) begin
    89                                                     SS_n = 1;
    90                                                   end
    91                                                   else begin
    92                                                     SS_n = 0;
    93                                                   end
    94                                               
    95              1                        178         $display("DIN = %b, din_saved = %b, count = %d, count_ss_n = %d, SS_n = %b time = %t", din, din_saved, count, count_ss_n, SS_n,$time);
    96                                               
    97                                                 endfunction
    98              1                       2822       function void pre_randomize();
    99                                                   //$display("Before Randomization: din_saved = %d",din_saved);
    100                                              
    101             1                       3000       endfunction


=================================================================================
=== Instance: /WRAPPER_read_only_seq_pkg
=== Design Unit: work.WRAPPER_read_only_seq_pkg
=================================================================================

Assertion Coverage:
    Assertions                       1         1         0   100.00%
--------------------------------------------------------------------
Name                 File(Line)                   Failure      Pass 
                                                  Count        Count
--------------------------------------------------------------------
/WRAPPER_read_only_seq_pkg/WRAPPER_read_only_seq/body/#ublk#61782279#15/immed__19
                     WRAPPER_read_only_seq.sv(19)
                                                        0          1
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        10         2         8    20.00%

================================Branch Details================================

Branch Coverage for instance /WRAPPER_read_only_seq_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File WRAPPER_read_only_seq.sv
------------------------------------IF Branch------------------------------------
    8                                    ***0***     Count coming in to IF
    8               1                    ***0***       `uvm_object_utils(WRAPPER_read_only_seq);
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    8                                          1     Count coming in to IF
    8               2                    ***0***       `uvm_object_utils(WRAPPER_read_only_seq);
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    8                                    ***0***     Count coming in to IF
    8               3                    ***0***       `uvm_object_utils(WRAPPER_read_only_seq);
    8               4                    ***0***       `uvm_object_utils(WRAPPER_read_only_seq);
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    8                                          1     Count coming in to IF
    8               5                    ***0***       `uvm_object_utils(WRAPPER_read_only_seq);
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    8                                    ***0***     Count coming in to IF
    8               6                    ***0***       `uvm_object_utils(WRAPPER_read_only_seq);
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       2         0         2     0.00%

================================Condition Details================================

Condition Coverage for instance /WRAPPER_read_only_seq_pkg --

  File WRAPPER_read_only_seq.sv
----------------Focused Condition View-------------------
Line       8 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       8 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:          1  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      17         9         8    52.94%

================================Statement Details================================

Statement Coverage for instance /WRAPPER_read_only_seq_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File WRAPPER_read_only_seq.sv
    1                                                package WRAPPER_read_only_seq_pkg;
    2                                                import WRAPPER_shared_pkg::*;
    3                                                import WRAPPER_seq_item_pkg::*;
    4                                                import uvm_pkg::*;
    5                                                `include "uvm_macros.svh"
    6                                                
    7                                                class WRAPPER_read_only_seq extends uvm_sequence #(WRAPPER_seq_item);
    8               1                    ***0***       `uvm_object_utils(WRAPPER_read_only_seq);
    8               2                    ***0***     
    8               3                    ***0***     
    8               4                    ***0***     
    8               5                    ***0***     
    8               6                          1     
    8               7                    ***0***     
    8               8                    ***0***     
    8               9                          1     
    8              10                    ***0***     
    9                                                  WRAPPER_seq_item seq_item;
    10                                                 function new(string name = "WRAPPER_reset_seq");
    11              1                          1         super.new(name);
    12                                                 endfunction
    13                                                 task body;
    14              1                          1         seq_item = WRAPPER_seq_item::type_id::create("seq_item");
    15              1                       1000         repeat(RUNS) begin
    16              1                       1000             start_item(seq_item);
    17              1                       1000             seq_item.wr_only.constraint_mode(0);
    18              1                       1000             seq_item.wr_rd_random.constraint_mode(0);
    19                                                       assert(seq_item.randomize());
    20              1                       1000             finish_item(seq_item);


=================================================================================
=== Instance: /WRAPPER_reset_seq_pkg
=== Design Unit: work.WRAPPER_reset_seq_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        10         2         8    20.00%

================================Branch Details================================

Branch Coverage for instance /WRAPPER_reset_seq_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File WRAPPER_reset_seq.sv
------------------------------------IF Branch------------------------------------
    8                                    ***0***     Count coming in to IF
    8               1                    ***0***       `uvm_object_utils(WRAPPER_reset_seq);
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    8                                          1     Count coming in to IF
    8               2                    ***0***       `uvm_object_utils(WRAPPER_reset_seq);
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    8                                    ***0***     Count coming in to IF
    8               3                    ***0***       `uvm_object_utils(WRAPPER_reset_seq);
    8               4                    ***0***       `uvm_object_utils(WRAPPER_reset_seq);
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    8                                          1     Count coming in to IF
    8               5                    ***0***       `uvm_object_utils(WRAPPER_reset_seq);
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    8                                    ***0***     Count coming in to IF
    8               6                    ***0***       `uvm_object_utils(WRAPPER_reset_seq);
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       2         0         2     0.00%

================================Condition Details================================

Condition Coverage for instance /WRAPPER_reset_seq_pkg --

  File WRAPPER_reset_seq.sv
----------------Focused Condition View-------------------
Line       8 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       8 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:          1  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      17         9         8    52.94%

================================Statement Details================================

Statement Coverage for instance /WRAPPER_reset_seq_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File WRAPPER_reset_seq.sv
    1                                                package WRAPPER_reset_seq_pkg;
    2                                                import WRAPPER_shared_pkg::*;
    3                                                import WRAPPER_seq_item_pkg::*;
    4                                                import uvm_pkg::*;
    5                                                `include "uvm_macros.svh"
    6                                                
    7                                                class WRAPPER_reset_seq extends uvm_sequence #(WRAPPER_seq_item);
    8               1                    ***0***       `uvm_object_utils(WRAPPER_reset_seq);
    8               2                    ***0***     
    8               3                    ***0***     
    8               4                    ***0***     
    8               5                    ***0***     
    8               6                          1     
    8               7                    ***0***     
    8               8                    ***0***     
    8               9                          1     
    8              10                    ***0***     
    9                                                  WRAPPER_seq_item seq_item;
    10                                                 function new(string name = "WRAPPER_reset_seq");
    11              1                          1         super.new(name);
    12                                                 endfunction
    13                                               
    14                                                 task body;
    15              1                          1         seq_item = WRAPPER_seq_item::type_id::create("seq_item");
    16              1                          1         start_item(seq_item);
    17              1                          1         seq_item.din = 0;
    18              1                          1         seq_item.MOSI = 0;
    19              1                          1         seq_item.rst_n = 0;
    20              1                          1         finish_item(seq_item);


=================================================================================
=== Instance: /WRAPPER_write_only_seq_pkg
=== Design Unit: work.WRAPPER_write_only_seq_pkg
=================================================================================

Assertion Coverage:
    Assertions                       1         1         0   100.00%
--------------------------------------------------------------------
Name                 File(Line)                   Failure      Pass 
                                                  Count        Count
--------------------------------------------------------------------
/WRAPPER_write_only_seq_pkg/WRAPPER_write_only_seq/body/#ublk#254679815#19/immed__24
                     WRAPPER_write_only_seq.sv(24)
                                                        0          1
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        10         2         8    20.00%

================================Branch Details================================

Branch Coverage for instance /WRAPPER_write_only_seq_pkg
NOTE: The modification timestamp for source file 'WRAPPER_write_only_seq.sv' has been altered since compilation.

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File WRAPPER_write_only_seq.sv
------------------------------------IF Branch------------------------------------
    8                                    ***0***     Count coming in to IF
    8               1                    ***0***       `uvm_object_utils(WRAPPER_write_only_seq);
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    8                                          1     Count coming in to IF
    8               2                    ***0***       `uvm_object_utils(WRAPPER_write_only_seq);
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    8                                    ***0***     Count coming in to IF
    8               3                    ***0***       `uvm_object_utils(WRAPPER_write_only_seq);
    8               4                    ***0***       `uvm_object_utils(WRAPPER_write_only_seq);
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    8                                          1     Count coming in to IF
    8               5                    ***0***       `uvm_object_utils(WRAPPER_write_only_seq);
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    8                                    ***0***     Count coming in to IF
    8               6                    ***0***       `uvm_object_utils(WRAPPER_write_only_seq);
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       2         0         2     0.00%

================================Condition Details================================

Condition Coverage for instance /WRAPPER_write_only_seq_pkg --
NOTE: The modification timestamp for source file 'WRAPPER_write_only_seq.sv' has been altered since compilation.

  File WRAPPER_write_only_seq.sv
----------------Focused Condition View-------------------
Line       8 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       8 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:          1  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      18        10         8    55.55%

================================Statement Details================================

Statement Coverage for instance /WRAPPER_write_only_seq_pkg --
NOTE: The modification timestamp for source file 'WRAPPER_write_only_seq.sv' has been altered since compilation.

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File WRAPPER_write_only_seq.sv
    1                                                package WRAPPER_write_only_seq_pkg;
    2                                                import WRAPPER_seq_item_pkg::*;
    3                                                import uvm_pkg::*;
    4                                                import WRAPPER_shared_pkg::*;
    5                                                `include "uvm_macros.svh"
    6                                                
    7                                                class WRAPPER_write_only_seq extends uvm_sequence #(WRAPPER_seq_item);
    8               1                    ***0***       `uvm_object_utils(WRAPPER_write_only_seq);
    8               2                    ***0***     
    8               3                    ***0***     
    8               4                    ***0***     
    8               5                    ***0***     
    8               6                          1     
    8               7                    ***0***     
    8               8                    ***0***     
    8               9                          1     
    8              10                    ***0***     
    9                                                  WRAPPER_seq_item seq_item;
    10                                                 function new(string name = "WRAPPER_main_seq");
    11              1                          1         super.new(name);
    12                                                 endfunction
    13                                                 task body;
    14              1                          1         seq_item = WRAPPER_seq_item::type_id::create("seq_item");
    15                                               
    16                                                   repeat(RUNS) begin
    17                                                       start_item(seq_item);
    18                                                       seq_item.constraint_mode(0);
    19              1                       1000             seq_item.wr_only.constraint_mode(1);
    20              1                       1000             seq_item.reset.constraint_mode(1);
    21              1                       1000             assert(seq_item.randomize());
    22              1                       1000             finish_item(seq_item);
    23              1                       1000         end
    24                                                 endtask
    25              1                       1000     endclass


=================================================================================
=== Instance: /WRAPPER_write_read_seq_pkg
=== Design Unit: work.WRAPPER_write_read_seq_pkg
=================================================================================

Assertion Coverage:
    Assertions                       1         1         0   100.00%
--------------------------------------------------------------------
Name                 File(Line)                   Failure      Pass 
                                                  Count        Count
--------------------------------------------------------------------
/WRAPPER_write_read_seq_pkg/WRAPPER_write_read_seq/body/#ublk#264526855#15/immed__19
                     WRAPPER_write_read_seq.sv(19)
                                                        0          1
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        10         2         8    20.00%

================================Branch Details================================

Branch Coverage for instance /WRAPPER_write_read_seq_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File WRAPPER_write_read_seq.sv
------------------------------------IF Branch------------------------------------
    8                                    ***0***     Count coming in to IF
    8               1                    ***0***       `uvm_object_utils(WRAPPER_write_read_seq);
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    8                                          1     Count coming in to IF
    8               2                    ***0***       `uvm_object_utils(WRAPPER_write_read_seq);
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    8                                    ***0***     Count coming in to IF
    8               3                    ***0***       `uvm_object_utils(WRAPPER_write_read_seq);
    8               4                    ***0***       `uvm_object_utils(WRAPPER_write_read_seq);
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    8                                          1     Count coming in to IF
    8               5                    ***0***       `uvm_object_utils(WRAPPER_write_read_seq);
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    8                                    ***0***     Count coming in to IF
    8               6                    ***0***       `uvm_object_utils(WRAPPER_write_read_seq);
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       2         0         2     0.00%

================================Condition Details================================

Condition Coverage for instance /WRAPPER_write_read_seq_pkg --

  File WRAPPER_write_read_seq.sv
----------------Focused Condition View-------------------
Line       8 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       8 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:          1  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      17         9         8    52.94%

================================Statement Details================================

Statement Coverage for instance /WRAPPER_write_read_seq_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File WRAPPER_write_read_seq.sv
    1                                                package WRAPPER_write_read_seq_pkg;
    2                                                import WRAPPER_shared_pkg::*;
    3                                                import WRAPPER_seq_item_pkg::*;
    4                                                import uvm_pkg::*;
    5                                                `include "uvm_macros.svh"
    6                                                
    7                                                class WRAPPER_write_read_seq extends uvm_sequence #(WRAPPER_seq_item);
    8               1                    ***0***       `uvm_object_utils(WRAPPER_write_read_seq);
    8               2                    ***0***     
    8               3                    ***0***     
    8               4                    ***0***     
    8               5                    ***0***     
    8               6                          1     
    8               7                    ***0***     
    8               8                    ***0***     
    8               9                          1     
    8              10                    ***0***     
    9                                                  WRAPPER_seq_item seq_item;
    10                                                 function new(string name = "WRAPPER_reset_seq");
    11              1                          1         super.new(name);
    12                                                 endfunction
    13                                                 task body;
    14              1                          1         seq_item = WRAPPER_seq_item::type_id::create("seq_item");
    15              1                       1000         repeat(RUNS) begin
    16              1                       1000             start_item(seq_item);
    17              1                       1000             seq_item.wr_only.constraint_mode(0);
    18              1                       1000             seq_item.rd_only.constraint_mode(0);
    19                                                       assert(seq_item.randomize());
    20              1                       1000             finish_item(seq_item);


=================================================================================
=== Instance: /WRAPPER_pkg_cover
=== Design Unit: work.WRAPPER_pkg_cover
=================================================================================
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      14        12         2    85.71%

================================Statement Details================================

Statement Coverage for instance /WRAPPER_pkg_cover --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File WRAPPER_coverage.sv
    1                                                package WRAPPER_pkg_cover;
    2                                                    import uvm_pkg::*;
    3                                                    import WRAPPER_seq_item_pkg::*;
    4                                                    import WRAPPER_shared_pkg::*;
    5                                                    `include "uvm_macros.svh"
    6                                                    class WRAPPER_coverage extends uvm_component;
    7               1                    ***0***             `uvm_component_utils(WRAPPER_coverage)
    7               2                    ***0***     
    7               3                          2     
    8                                                        uvm_analysis_export #(WRAPPER_seq_item) cov_export;
    9                                                        uvm_tlm_analysis_fifo #(WRAPPER_seq_item) cov_fifo;
    10                                                       WRAPPER_seq_item seq_item_cov;
    11                                                       covergroup cvr_grp;
    12                                                           
    13                                                           // din_cp: coverpoint seq_item_cov.din[9:8]{
    14                                                           //     bins din_values[] = {[0:3]};
    15                                                           //     bins wrdata_after_wraddress = (2'b00=>2'b01);
    16                                                           //     bins rddata_after_rdaddress = (2'b10=>2'b11);
    17                                                           //     bins wradd_wrdata_rdadd_rddata = (2'b00=>2'b01=>2'b10=>2'b11);
    18                                                           // }
    19                                                           // rx_cp: coverpoint seq_item_cov.rx_valid;
    20                                                           // tx_cp: coverpoint seq_item_cov.tx_valid;
    21                                               
    22                                                           // // din_cross_rx: cross din_cp, rx_cp iff (seq_item_cov.rx_valid == 1) {
    23                                                           // //     option.cross_auto_bin_max = 0;
    24                                                           // // }
    25                                               
    26                                                           // din_cross_rx: cross din_cp, rx_cp{
    27                                                           //     option.cross_auto_bin_max = 0;
    28                                                           //     bins din_values_rx_high = binsof(din_cp.din_values) && binsof(rx_cp) intersect{1};
    29                                                               
    30                                                           // }
    31                                               
    32                                               
    33                                                           // din_cross_tx: cross din_cp, tx_cp {
    34                                                           //     option.cross_auto_bin_max = 0;
    35                                                           //     bins rd_data_tx_high = binsof(din_cp.din_values) intersect{3} && binsof(tx_cp) intersect{1};
    36                                                           // }
    37                                                       endgroup
    38                                               
    39                                                       function new(string name = "WRAPPER_coverage",uvm_component parent = null);
    40              1                          1                 super.new(name,parent);
    41              1                          1                 cvr_grp=new();
    42                                                       endfunction
    43                                                       function void build_phase(uvm_phase phase);
    44              1                          1                 super.build_phase(phase);
    45              1                          1                 cov_export = new("cov_export",this);
    46              1                          1                 cov_fifo = new("cov_fifo",this);
    47                                                       endfunction
    48                                                       function void connect_phase(uvm_phase phase);
    49              1                          1                 super.connect_phase(phase);
    50              1                          1                 cov_export.connect(cov_fifo.analysis_export);
    51                                                       endfunction
    52                                                       task run_phase(uvm_phase phase);
    53              1                          1                 super.run_phase(phase);
    54              1                          1                 forever begin
    55              1                       3002                     cov_fifo.get(seq_item_cov);
    56              1                          1                     cvr_grp.sample();


=================================================================================
=== Instance: /WRAPPER_pkg_score
=== Design Unit: work.WRAPPER_pkg_score
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         4         2         2    50.00%

================================Branch Details================================

Branch Coverage for instance /WRAPPER_pkg_score
NOTE: The modification timestamp for source file 'WRAPPER_score.sv' has been altered since compilation.

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File WRAPPER_score.sv
------------------------------------IF Branch------------------------------------
    53                                         1     Count coming in to IF
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    54                                         1     Count coming in to IF
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      17        15         2    88.23%

================================Statement Details================================

Statement Coverage for instance /WRAPPER_pkg_score --
NOTE: The modification timestamp for source file 'WRAPPER_score.sv' has been altered since compilation.

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File WRAPPER_score.sv
    1                                                package WRAPPER_pkg_score;
    2                                                    import uvm_pkg::*;
    3                                                    import WRAPPER_seq_item_pkg::*;
    4                                                    import WRAPPER_shared_pkg::*;
    5                                                    `include "uvm_macros.svh"
    6                                                    class WRAPPER_scoreboard extends uvm_scoreboard;
    7               1                    ***0***             `uvm_component_utils(WRAPPER_scoreboard)
    7               2                    ***0***     
    7               3                          2     
    8                                                        uvm_analysis_export #(WRAPPER_seq_item) sb_export;
    9                                                        uvm_tlm_analysis_fifo #(WRAPPER_seq_item) sb_fifo;
    10                                                       WRAPPER_seq_item seq_item_sb;
    11                                                     
    12              1                          1             int error_count=0;
    13              1                          1             int correct_count=0;
    14                                                       
    15                                                       bit [7:0] MEM [255:0];
    16                                                       bit [7:0] Rd_Addr, Wr_Addr;
    17                                                       
    18                                                       uvm_analysis_port #(WRAPPER_seq_item) agt_ap;
    19                                                       function new(string name = "WRAPPER_scoreboard",uvm_component parent = null);
    20                                                           super.new(name,parent);
    21                                                       endfunction
    22              1                          1             function void build_phase(uvm_phase phase);
    23                                                           super.build_phase(phase);
    24                                                           sb_export = new("sb_export",this);
    25              1                          1                 sb_fifo = new("sb_fifo",this);
    26              1                          1             endfunction
    27              1                          1             function void connect_phase(uvm_phase phase);
    28                                                           super.connect_phase(phase);
    29                                                           sb_export.connect(sb_fifo.analysis_export);
    30              1                          1             endfunction
    31              1                          1             task run_phase(uvm_phase phase);
    32                                                           super.run_phase(phase);
    33                                                           forever begin
    34              1                          1     
    35              1                          1                     sb_fifo.get(seq_item_sb);
    36                                                           end
    37              1                       3002             endtask
    38                                                       function void report_phase(uvm_phase phase);
    39                                                           super.report_phase(phase);
    40                                                           `uvm_info("report_phase",$sformatf("Total successful transactions: %0d",correct_count),UVM_MEDIUM);
    41                                                           `uvm_info("report_phase",$sformatf("Total failed transactions: %0d",error_count),UVM_MEDIUM);
    42                                                       endfunction
    43                                                   endclass
    44                                               endpackage
    1                                                package WRAPPER_pkg_score;
    2                                                    import uvm_pkg::*;
    3                                                    import WRAPPER_seq_item_pkg::*;
    4                                                    import WRAPPER_shared_pkg::*;
    5                                                    `include "uvm_macros.svh"
    6                                                    class WRAPPER_scoreboard extends uvm_scoreboard;
    7                                                        `uvm_component_utils(WRAPPER_scoreboard)
    8                                                        uvm_analysis_export #(WRAPPER_seq_item) sb_export;
    9                                                        uvm_tlm_analysis_fifo #(WRAPPER_seq_item) sb_fifo;
    10                                                       WRAPPER_seq_item seq_item_sb;
    11                                                     
    12                                                       int error_count=0;
    13                                                       int correct_count=0;
    14                                                       
    15                                                       bit [7:0] MEM [255:0];
    16                                                       bit [7:0] Rd_Addr, Wr_Addr;
    17                                                       
    18                                                       uvm_analysis_port #(WRAPPER_seq_item) agt_ap;
    19                                                       function new(string name = "WRAPPER_scoreboard",uvm_component parent = null);
    20                                                           super.new(name,parent);
    21                                                       endfunction
    22                                                       function void build_phase(uvm_phase phase);
    23                                                           super.build_phase(phase);
    24                                                           sb_export = new("sb_export",this);
    25                                                           sb_fifo = new("sb_fifo",this);
    26                                                       endfunction
    27                                                       function void connect_phase(uvm_phase phase);
    28                                                           super.connect_phase(phase);
    29                                                           sb_export.connect(sb_fifo.analysis_export);
    30                                                       endfunction
    31                                                       task run_phase(uvm_phase phase);
    32                                                           super.run_phase(phase);
    33                                                           forever begin
    34                                               
    35                                                               sb_fifo.get(seq_item_sb);
    36                                                           end
    37                                                       endtask
    38                                                       function void report_phase(uvm_phase phase);
    39                                                           super.report_phase(phase);
    40                                                           `uvm_info("report_phase",$sformatf("Total successful transactions: %0d",correct_count),UVM_MEDIUM);
    41                                                           `uvm_info("report_phase",$sformatf("Total failed transactions: %0d",error_count),UVM_MEDIUM);
    42                                                       endfunction
    43                                                   endclass
    44                                               endpackage
    1                                                package WRAPPER_pkg_score;
    2                                                    import uvm_pkg::*;
    3                                                    import WRAPPER_seq_item_pkg::*;
    4                                                    import WRAPPER_shared_pkg::*;
    5                                                    `include "uvm_macros.svh"
    6                                                    class WRAPPER_scoreboard extends uvm_scoreboard;
    7                                                        `uvm_component_utils(WRAPPER_scoreboard)
    8                                                        uvm_analysis_export #(WRAPPER_seq_item) sb_export;
    9                                                        uvm_tlm_analysis_fifo #(WRAPPER_seq_item) sb_fifo;
    10                                                       WRAPPER_seq_item seq_item_sb;
    11                                                     
    12                                                       int error_count=0;
    13                                                       int correct_count=0;
    14                                                       
    15                                                       bit [7:0] MEM [255:0];
    16                                                       bit [7:0] Rd_Addr, Wr_Addr;
    17                                                       
    18                                                       uvm_analysis_port #(WRAPPER_seq_item) agt_ap;
    19                                                       function new(string name = "WRAPPER_scoreboard",uvm_component parent = null);
    20                                                           super.new(name,parent);
    21                                                       endfunction
    22                                                       function void build_phase(uvm_phase phase);
    23                                                           super.build_phase(phase);
    24                                                           sb_export = new("sb_export",this);
    25                                                           sb_fifo = new("sb_fifo",this);
    26                                                       endfunction
    27                                                       function void connect_phase(uvm_phase phase);
    28                                                           super.connect_phase(phase);
    29                                                           sb_export.connect(sb_fifo.analysis_export);
    30                                                       endfunction
    31                                                       task run_phase(uvm_phase phase);
    32                                                           super.run_phase(phase);
    33                                                           forever begin
    34                                               
    35                                                               sb_fifo.get(seq_item_sb);
    36                                                           end
    37                                                       endtask
    38                                                       function void report_phase(uvm_phase phase);
    39                                                           super.report_phase(phase);
    40                                                           `uvm_info("report_phase",$sformatf("Total successful transactions: %0d",correct_count),UVM_MEDIUM);
    41                                                           `uvm_info("report_phase",$sformatf("Total failed transactions: %0d",error_count),UVM_MEDIUM);
    42                                                       endfunction
    43                                                   endclass
    44                                               endpackage


=================================================================================
=== Instance: /WRAPPER_pkg_obj
=== Design Unit: work.WRAPPER_pkg_obj
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        10         0        10     0.00%

================================Branch Details================================

Branch Coverage for instance /WRAPPER_pkg_obj

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File WRAPPER_config_obj.sv
------------------------------------IF Branch------------------------------------
    5                                    ***0***     Count coming in to IF
    5               1                    ***0***             `uvm_object_utils(WRAPPER_config_obj)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    5                                    ***0***     Count coming in to IF
    5               2                    ***0***             `uvm_object_utils(WRAPPER_config_obj)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    5                                    ***0***     Count coming in to IF
    5               3                    ***0***             `uvm_object_utils(WRAPPER_config_obj)
    5               4                    ***0***             `uvm_object_utils(WRAPPER_config_obj)
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    5                                    ***0***     Count coming in to IF
    5               5                    ***0***             `uvm_object_utils(WRAPPER_config_obj)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    5                                    ***0***     Count coming in to IF
    5               6                    ***0***             `uvm_object_utils(WRAPPER_config_obj)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       2         0         2     0.00%

================================Condition Details================================

Condition Coverage for instance /WRAPPER_pkg_obj --

  File WRAPPER_config_obj.sv
----------------Focused Condition View-------------------
Line       5 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       5 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:    ***0***  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      11         1        10     9.09%

================================Statement Details================================

Statement Coverage for instance /WRAPPER_pkg_obj --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File WRAPPER_config_obj.sv
    1                                                package WRAPPER_pkg_obj;
    2                                                import uvm_pkg::*;
    3                                                `include "uvm_macros.svh"
    4                                                    class WRAPPER_config_obj extends uvm_object;
    5               1                    ***0***             `uvm_object_utils(WRAPPER_config_obj)
    5               2                    ***0***     
    5               3                    ***0***     
    5               4                    ***0***     
    5               5                    ***0***     
    5               6                    ***0***     
    5               7                    ***0***     
    5               8                    ***0***     
    5               9                    ***0***     
    5              10                    ***0***     
    6                                                        virtual WRAPPER_if WRAPPER_vif;
    7                                                        uvm_active_passive_enum is_active;
    8                                                
    9                                                        function new(string name = "WRAPPER_config_obj");
    10              1                          1                 super.new(name);


=================================================================================
=== Instance: /WRAPPER_pkg_mon
=== Design Unit: work.WRAPPER_pkg_mon
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         2         1         1    50.00%

================================Branch Details================================

Branch Coverage for instance /WRAPPER_pkg_mon

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File WRAPPER_mon.sv
------------------------------------IF Branch------------------------------------
    30                                      3001     Count coming in to IF
    30              1                    ***0***                     `uvm_info("run_phase",rsp_seq_item.convert2string_stimulus(),UVM_HIGH) 
                                            3001     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      16        13         3    81.25%

================================Statement Details================================

Statement Coverage for instance /WRAPPER_pkg_mon --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File WRAPPER_mon.sv
    1                                                package WRAPPER_pkg_mon;
    2                                                    import uvm_pkg::*;
    3                                                    import WRAPPER_seq_item_pkg::*;
    4                                                    import WRAPPER_shared_pkg::*;
    5                                                    `include "uvm_macros.svh"
    6                                                    class WRAPPER_mon extends uvm_monitor;
    7               1                    ***0***             `uvm_component_utils(WRAPPER_mon)
    7               2                    ***0***     
    7               3                          2     
    8                                                        virtual WRAPPER_if WRAPPER_vif;
    9                                                        WRAPPER_seq_item rsp_seq_item;
    10                                                       uvm_analysis_port #(WRAPPER_seq_item) mon_ap;
    11                                                       function new(string name = "WRAPPER_mon",uvm_component parent = null);
    12              1                          1                 super.new(name,parent);
    13                                                       endfunction
    14                                                       function void build_phase(uvm_phase phase);
    15              1                          1                 super.build_phase(phase);
    16              1                          1                 mon_ap=new("mon_ap",this);
    17                                                       endfunction
    18                                                       task run_phase(uvm_phase phase);
    19              1                          1                 super.run_phase(phase);
    20              1                          1                 forever begin
    21              1                       3002                     rsp_seq_item = WRAPPER_seq_item::type_id::create("rsp_seq_item");
    22              1                       3002                         @(negedge WRAPPER_vif.clk);
    23              1                       3001                         rsp_seq_item.MOSI=WRAPPER_vif.MOSI;
    24              1                       3001                         rsp_seq_item.rst_n=WRAPPER_vif.rst_n;
    25              1                       3001                         rsp_seq_item.MISO=WRAPPER_vif.MISO;
    26              1                       3001                         rsp_seq_item.SS_n=WRAPPER_vif.SS_n;
    27                                                                   // rsp_seq_item.tx_valid_ref=WRAPPER_vif.tx_valid_ref;
    28                                                                   // rsp_seq_item.dout_ref=WRAPPER_vif.dout_ref;
    29              1                       3001                     mon_ap.write(rsp_seq_item);
    30              1                    ***0***                     `uvm_info("run_phase",rsp_seq_item.convert2string_stimulus(),UVM_HIGH) 


=================================================================================
=== Instance: /WRAPPER_driver_pkg
=== Design Unit: work.WRAPPER_driver_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         2         1         1    50.00%

================================Branch Details================================

Branch Coverage for instance /WRAPPER_driver_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File WRAPPER_driver.sv
------------------------------------IF Branch------------------------------------
    22                                      3001     Count coming in to IF
    22              1                    ***0***                     `uvm_info("run_phase",stim_seq_item.convert2string_stimulus(),UVM_HIGH) 
                                            3001     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      14        11         3    78.57%

================================Statement Details================================

Statement Coverage for instance /WRAPPER_driver_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File WRAPPER_driver.sv
    1                                                package WRAPPER_driver_pkg;
    2                                                    import uvm_pkg::*;
    3                                                    import WRAPPER_seq_item_pkg::*;
    4                                                    `include "uvm_macros.svh"
    5                                                    class WRAPPER_driver extends uvm_driver #(WRAPPER_seq_item);
    6               1                    ***0***             `uvm_component_utils(WRAPPER_driver)
    6               2                    ***0***     
    6               3                          2     
    7                                                        virtual WRAPPER_if WRAPPER_vif;
    8                                                        WRAPPER_seq_item stim_seq_item;
    9                                                        function new(string name = "WRAPPER_driver",uvm_component parent = null);
    10              1                          1                 super.new(name,parent);
    11                                                       endfunction
    12                                                       task run_phase(uvm_phase phase);
    13              1                          1                 super.run_phase(phase);
    14              1                          1                 forever begin
    15              1                       3002                     stim_seq_item = WRAPPER_seq_item::type_id::create("stim_seq_item");
    16              1                       3002                     seq_item_port.get_next_item(stim_seq_item);
    17              1                       3001                     WRAPPER_vif.MOSI=stim_seq_item.MOSI;
    18              1                       3001                     WRAPPER_vif.rst_n=stim_seq_item.rst_n;
    19              1                       3001                     WRAPPER_vif.SS_n=stim_seq_item.SS_n;
    20              1                       3001                     @(negedge WRAPPER_vif.clk);
    21              1                       3001                     seq_item_port.item_done();
    22              1                    ***0***                     `uvm_info("run_phase",stim_seq_item.convert2string_stimulus(),UVM_HIGH) 


=================================================================================
=== Instance: /WRAPPER_sequencer_pkg
=== Design Unit: work.WRAPPER_sequencer_pkg
=================================================================================
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                       4         2         2    50.00%

================================Statement Details================================

Statement Coverage for instance /WRAPPER_sequencer_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File WRAPPER_sequencer.sv
    1                                                package WRAPPER_sequencer_pkg;
    2                                                import uvm_pkg::*;
    3                                                import WRAPPER_seq_item_pkg::*;
    4                                                `include "uvm_macros.svh"
    5                                                
    6                                                class WRAPPER_sequencer extends uvm_sequencer #(WRAPPER_seq_item);
    7               1                    ***0***       `uvm_component_utils(WRAPPER_sequencer);
    7               2                    ***0***     
    7               3                          2     
    8                                                  function new(string name = "WRAPPER_sequencer",uvm_component parent = null);
    9               1                          1         super.new(name,parent);


=================================================================================
=== Instance: /WRAPPER_pkg_agent
=== Design Unit: work.WRAPPER_pkg_agent
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         8         3         5    37.50%

================================Branch Details================================

Branch Coverage for instance /WRAPPER_pkg_agent

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File WRAPPER_agent.sv
------------------------------------IF Branch------------------------------------
    22                                         1     Count coming in to IF
    22              1                    ***0***                 if(!uvm_config_db #(WRAPPER_config_obj)::get(this,"","CFG_wrapper",WRAPPER_cfg))begin
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    23                                   ***0***     Count coming in to IF
    23              1                    ***0***                     `uvm_fatal("bulid_phase","unable to get congiguration object")
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    25                                         1     Count coming in to IF
    25              1                          1                 if(WRAPPER_cfg.is_active == UVM_ACTIVE) begin
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    34                                         1     Count coming in to IF
    34              1                          1                 if(WRAPPER_cfg.is_active == UVM_ACTIVE) begin
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      15        12         3    80.00%

================================Statement Details================================

Statement Coverage for instance /WRAPPER_pkg_agent --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File WRAPPER_agent.sv
    1                                                package WRAPPER_pkg_agent;
    2                                                    import uvm_pkg::*;
    3                                                    import WRAPPER_sequencer_pkg::*;
    4                                                    import WRAPPER_driver_pkg::*;
    5                                                    import WRAPPER_pkg_mon::*;
    6                                                    import WRAPPER_pkg_obj::*;
    7                                                    import WRAPPER_seq_item_pkg::*;
    8                                                    `include "uvm_macros.svh"
    9                                                    class WRAPPER_agent extends uvm_agent;
    10              1                    ***0***             `uvm_component_utils(WRAPPER_agent)
    10              2                    ***0***     
    10              3                          2     
    11                                                       WRAPPER_sequencer sqr;
    12                                                       WRAPPER_driver drv;
    13                                                       WRAPPER_mon mon;
    14                                                       WRAPPER_config_obj WRAPPER_cfg;
    15                                                       uvm_analysis_port #(WRAPPER_seq_item) agt_ap;
    16                                               
    17                                                       function new(string name = "WRAPPER_agent",uvm_component parent = null);
    18              1                          1                 super.new(name,parent);
    19                                                       endfunction
    20                                                       function void build_phase(uvm_phase phase);
    21              1                          1                 super.build_phase(phase);
    22                                                           if(!uvm_config_db #(WRAPPER_config_obj)::get(this,"","CFG_wrapper",WRAPPER_cfg))begin
    23              1                    ***0***                     `uvm_fatal("bulid_phase","unable to get congiguration object")
    24                                                           end
    25                                                           if(WRAPPER_cfg.is_active == UVM_ACTIVE) begin
    26              1                          1                     sqr = WRAPPER_sequencer::type_id::create("sqr",this);
    27              1                          1                     drv = WRAPPER_driver::type_id::create("drv",this);
    28                                                           end
    29              1                          1                 mon = WRAPPER_mon::type_id::create("mon",this);
    30              1                          1                 agt_ap = new("agt_ap",this);
    31                                                       endfunction
    32                                                       function void connect_phase(uvm_phase phase);
    33              1                          1                 super.connect_phase(phase);
    34                                                           if(WRAPPER_cfg.is_active == UVM_ACTIVE) begin
    35                                               
    36              1                          1                     drv.WRAPPER_vif = WRAPPER_cfg.WRAPPER_vif;
    37              1                          1                     drv.seq_item_port.connect(sqr.seq_item_export);
    38                                                           end
    39              1                          1                 mon.mon_ap.connect(agt_ap);
    40              1                          1                 mon.WRAPPER_vif = WRAPPER_cfg.WRAPPER_vif;


=================================================================================
=== Instance: /WRAPPER_env_pkg
=== Design Unit: work.WRAPPER_env_pkg
=================================================================================
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      11         9         2    81.81%

================================Statement Details================================

Statement Coverage for instance /WRAPPER_env_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File WRAPPER_env.sv
    1                                                package WRAPPER_env_pkg;
    2                                                import uvm_pkg::*;
    3                                                import WRAPPER_pkg_agent::*;
    4                                                import WRAPPER_pkg_score::*;
    5                                                import WRAPPER_pkg_cover::*;
    6                                                `include "uvm_macros.svh"
    7                                                
    8                                                class WRAPPER_env extends uvm_env;
    9                                                  // Do the essentials (factory register & Constructor)
    10              1                    ***0***       `uvm_component_utils(WRAPPER_env)
    10              2                    ***0***     
    10              3                          2     
    11                                                 WRAPPER_agent agt;
    12                                                 WRAPPER_scoreboard sb;
    13                                                 WRAPPER_coverage cov;
    14                                                 function new(string name = "WRAPPER_env",uvm_component parent = null);
    15              1                          1         super.new(name,parent);
    16                                                 endfunction
    17                                                 // Build the driver in the build phase
    18                                                 function void build_phase(uvm_phase phase);
    19              1                          1         super.build_phase(phase);
    20              1                          1         agt = WRAPPER_agent::type_id::create("agt",this);
    21              1                          1         sb = WRAPPER_scoreboard::type_id::create("sb",this);
    22              1                          1         cov = WRAPPER_coverage::type_id::create("cov",this);
    23                                                 endfunction
    24                                                 function void connect_phase(uvm_phase phase);
    25              1                          1         super.connect_phase(phase);
    26              1                          1         agt.agt_ap.connect(sb.sb_export);
    27              1                          1         agt.agt_ap.connect(cov.cov_export);


=================================================================================
=== Instance: /WRAPPER_test_pkg
=== Design Unit: work.WRAPPER_test_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        28        11        17    39.28%

================================Branch Details================================

Branch Coverage for instance /WRAPPER_test_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File WRAPPER_test.sv
------------------------------------IF Branch------------------------------------
    59                                         1     Count coming in to IF
    59              1                    ***0***                 if(!uvm_config_db #(virtual WRAPPER_if)::get(this,"","WRAPPER_IF",WRAPPER_cfg.WRAPPER_vif))begin
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    60                                   ***0***     Count coming in to IF
    60              1                    ***0***                     `uvm_fatal("bulid_phase","unable to get congiguration object")
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    64                                         1     Count coming in to IF
    64              1                    ***0***                 if(!uvm_config_db #(virtual RAM_if)::get(this,"","RAM_IF",RAM_cfg.RAM_vif))begin
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    65                                   ***0***     Count coming in to IF
    65              1                    ***0***                     `uvm_fatal("bulid_phase","unable to get congiguration object")
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    69                                         1     Count coming in to IF
    69              1                    ***0***                 if(!uvm_config_db #(virtual SPI_if)::get(this,"","SPI_IF",SPI_cfg.SPI_vif))begin
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    70                                   ***0***     Count coming in to IF
    70              1                    ***0***                     `uvm_fatal("bulid_phase","unable to get congiguration object")
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    79                                         1     Count coming in to IF
    79              1                          1       `uvm_info("run_phase", "Reset Asserted", UVM_LOW)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    81                                         1     Count coming in to IF
    81              1                          1       `uvm_info("run_phase", "Reset Deasserted", UVM_LOW)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    84                                         1     Count coming in to IF
    84              1                          1       `uvm_info("run_phase", "write_only_seq Stimulus Generation Started", UVM_LOW)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    86                                         1     Count coming in to IF
    86              1                          1       `uvm_info("run_phase", "write_only_seq Stimulus Generation Ended", UVM_LOW)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    88                                         1     Count coming in to IF
    88              1                          1       `uvm_info("run_phase", "read_only_seq Stimulus Generation Started", UVM_LOW)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    90                                         1     Count coming in to IF
    90              1                          1       `uvm_info("run_phase", "read_only_seq Stimulus Generation Ended", UVM_LOW)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    92                                         1     Count coming in to IF
    92              1                          1       `uvm_info("run_phase", "write_read_random_seq Stimulus Generation Started", UVM_LOW)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    94                                         1     Count coming in to IF
    94              1                          1       `uvm_info("run_phase", "write_read_random_seq Stimulus Generation Ended", UVM_LOW)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      39        34         5    87.17%

================================Statement Details================================

Statement Coverage for instance /WRAPPER_test_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File WRAPPER_test.sv
    1                                                package WRAPPER_test_pkg;
    2                                                import WRAPPER_env_pkg::*;
    3                                                import WRAPPER_pkg_obj::*;
    4                                                import WRAPPER_write_read_seq_pkg::*;
    5                                                import WRAPPER_write_only_seq_pkg::*;
    6                                                import WRAPPER_reset_seq_pkg::*;
    7                                                import WRAPPER_read_only_seq_pkg::*;
    8                                                import RAM_env_pkg::*;
    9                                                import RAM_pkg_obj::*;
    10                                               import SPI_env_pkg::*;
    11                                               import SPI_pkg_obj::*;
    12                                               
    13                                               
    14                                               import uvm_pkg::*;
    15                                               `include "uvm_macros.svh"
    16                                               class WRAPPER_test extends uvm_test;
    17                                                 // Do the essentials (factory register & Constructor)
    18              1                    ***0***       `uvm_component_utils(WRAPPER_test)
    18              2                    ***0***     
    18              3                          4     
    19                                                 WRAPPER_env env;
    20                                                 SPI_env env_spi;
    21                                                 RAM_env env_ram;
    22                                               
    23                                                 WRAPPER_config_obj WRAPPER_cfg;
    24                                                 RAM_config_obj RAM_cfg;
    25                                                 SPI_config_obj SPI_cfg;
    26                                               
    27                                                 virtual WRAPPER_if WRAPPER_vif;
    28                                                 virtual RAM_if RAM_vif;
    29                                                 virtual SPI_if SPI_vif;
    30                                               
    31                                               
    32                                                 WRAPPER_read_only_seq read_only_seq;
    33                                                 WRAPPER_write_only_seq write_only_seq;
    34                                                 WRAPPER_write_read_seq write_read_random_seq;
    35                                                 WRAPPER_reset_seq reset_seq;
    36                                                 function new(string name = "WRAPPER_test",uvm_component parent = null);
    37              1                          1         super.new(name,parent);
    38                                                 endfunction
    39                                                 function void build_phase(uvm_phase phase);
    40              1                          1                 super.build_phase(phase);
    41              1                          1                 env = WRAPPER_env::type_id::create("env",this);
    42              1                          1                 env_ram = RAM_env::type_id::create("env_ram",this);
    43              1                          1                 env_spi = SPI_env::type_id::create("env_spi",this);
    44                                               
    45              1                          1                 WRAPPER_cfg = WRAPPER_config_obj::type_id::create("WRAPPER_cfg",this);
    46              1                          1                 RAM_cfg = RAM_config_obj::type_id::create("RAM_cfg",this);
    47              1                          1                 SPI_cfg = SPI_config_obj::type_id::create("SPI_cfg",this);
    48                                               
    49              1                          1                 SPI_cfg.is_active = UVM_PASSIVE;
    50              1                          1                 RAM_cfg.is_active = UVM_PASSIVE;
    51              1                          1                 WRAPPER_cfg.is_active = UVM_ACTIVE;
    52                                               
    53              1                          1                 read_only_seq = WRAPPER_read_only_seq::type_id::create("read_only_seq",this);
    54              1                          1                 write_only_seq = WRAPPER_write_only_seq::type_id::create("write_only_seq",this);
    55              1                          1                 write_read_random_seq = WRAPPER_write_read_seq::type_id::create("read_only_seq",this);
    56              1                          1                 reset_seq = WRAPPER_reset_seq::type_id::create("reset_seq",this);
    57                                               
    58                                               
    59                                                           if(!uvm_config_db #(virtual WRAPPER_if)::get(this,"","WRAPPER_IF",WRAPPER_cfg.WRAPPER_vif))begin
    60              1                    ***0***                     `uvm_fatal("bulid_phase","unable to get congiguration object")
    61                                                           end
    62              1                          1                 uvm_config_db #(WRAPPER_config_obj)::set(this,"*","CFG_wrapper",WRAPPER_cfg);
    63                                               
    64                                                           if(!uvm_config_db #(virtual RAM_if)::get(this,"","RAM_IF",RAM_cfg.RAM_vif))begin
    65              1                    ***0***                     `uvm_fatal("bulid_phase","unable to get congiguration object")
    66                                                           end
    67              1                          1                 uvm_config_db #(RAM_config_obj)::set(this,"*","CFG_ram",RAM_cfg);
    68                                               
    69                                                           if(!uvm_config_db #(virtual SPI_if)::get(this,"","SPI_IF",SPI_cfg.SPI_vif))begin
    70              1                    ***0***                     `uvm_fatal("bulid_phase","unable to get congiguration object")
    71                                                           end
    72              1                          1                 uvm_config_db #(SPI_config_obj)::set(this,"*","CFG_spi",SPI_cfg);
    73                                               
    74                                                 endfunction
    75                                                 task run_phase(uvm_phase phase);
    76              1                          1       super.run_phase(phase);
    77              1                          1       phase.raise_objection(this);
    78                                                 //reset sequence
    79              1                          1       `uvm_info("run_phase", "Reset Asserted", UVM_LOW)
    80              1                          1       reset_seq.start(env.agt.sqr);
    81              1                          1       `uvm_info("run_phase", "Reset Deasserted", UVM_LOW)
    82                                               
    83                                                 //main sequences
    84              1                          1       `uvm_info("run_phase", "write_only_seq Stimulus Generation Started", UVM_LOW)
    85              1                          1       write_only_seq.start(env.agt.sqr);
    86              1                          1       `uvm_info("run_phase", "write_only_seq Stimulus Generation Ended", UVM_LOW)
    87                                               
    88              1                          1       `uvm_info("run_phase", "read_only_seq Stimulus Generation Started", UVM_LOW)
    89              1                          1       read_only_seq.start(env.agt.sqr);
    90              1                          1       `uvm_info("run_phase", "read_only_seq Stimulus Generation Ended", UVM_LOW)
    91                                               
    92              1                          1       `uvm_info("run_phase", "write_read_random_seq Stimulus Generation Started", UVM_LOW)
    93              1                          1       write_read_random_seq.start(env.agt.sqr);
    94              1                          1       `uvm_info("run_phase", "write_read_random_seq Stimulus Generation Ended", UVM_LOW)
    95                                               
    96              1                          1       phase.drop_objection(this);


COVERGROUP COVERAGE:
----------------------------------------------------------------------------------------------------------
Covergroup                                             Metric       Goal       Bins    Status               
                                                                                                         
----------------------------------------------------------------------------------------------------------
 TYPE /SPI_pkg_cover/SPI_coverage/cvr_grp             100.00%        100          -    Covered              
    covered/total bins:                                    14         14          -                      
    missing/total bins:                                     0         14          -                      
    % Hit:                                            100.00%        100          -                      
    Coverpoint rx_data_cp                             100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint SS_n_cp                                100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint MOSI_cp                                100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
    Cross SS_n_MOSI                                   100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
 Covergroup instance \/SPI_pkg_cover::SPI_coverage::cvr_grp  
                                                      100.00%        100          -    Covered              
    covered/total bins:                                    14         14          -                      
    missing/total bins:                                     0         14          -                      
    % Hit:                                            100.00%        100          -                      
    Coverpoint rx_data_cp                             100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                      1214          1          -    Covered              
        bin auto[1]                                       442          1          -    Covered              
        bin auto[2]                                       544          1          -    Covered              
        bin auto[3]                                       801          1          -    Covered              
    Coverpoint SS_n_cp                                100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin extended_transaction[1=>0[*23]=>1]             26          1          -    Covered              
        bin full_transaction_normal[1=>0[*13]=>1]         128          1          -    Covered              
    Coverpoint MOSI_cp                                100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
        bin write_addr                                    711          1          -    Covered              
        bin write_data                                    297          1          -    Covered              
        bin read_addr                                     302          1          -    Covered              
        bin read_data                                     661          1          -    Covered              
    Cross SS_n_MOSI                                   100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin write_addr_full                            45          1          -    Covered              
            bin write_data_full                             6          1          -    Covered              
            bin read_addr_full                              6          1          -    Covered              
            bin read_data_extended                          6          1          -    Covered              
 TYPE /RAM_pkg_cover/RAM_coverage/cvr_grp              97.14%        100          -    Uncovered            
    covered/total bins:                                    12         13          -                      
    missing/total bins:                                     1         13          -                      
    % Hit:                                             92.30%        100          -                      
    Coverpoint din_cp                                  85.71%        100          -    Uncovered            
        covered/total bins:                                 6          7          -                      
        missing/total bins:                                 1          7          -                      
        % Hit:                                         85.71%        100          -                      
    Coverpoint rx_cp                                  100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint tx_cp                                  100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
    Cross din_cross_rx                                100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
    Cross din_cross_tx                                100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
 Covergroup instance \/RAM_pkg_cover::RAM_coverage::cvr_grp  
                                                       97.14%        100          -    Uncovered            
    covered/total bins:                                    12         13          -                      
    missing/total bins:                                     1         13          -                      
    % Hit:                                             92.30%        100          -                      
    Coverpoint din_cp                                  85.71%        100          -    Uncovered            
        covered/total bins:                                 6          7          -                      
        missing/total bins:                                 1          7          -                      
        % Hit:                                         85.71%        100          -                      
        bin din_values[0]                                1214          1          -    Covered              
        bin din_values[1]                                 442          1          -    Covered              
        bin din_values[2]                                 544          1          -    Covered              
        bin din_values[3]                                 801          1          -    Covered              
        bin wrdata_after_wraddress                         15          1          -    Covered              
        bin rddata_after_rdaddress                         12          1          -    Covered              
        bin wradd_wrdata_rdadd_rddata                       0          1          -    ZERO                 
    Coverpoint rx_cp                                  100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                      2427          1          -    Covered              
        bin auto[1]                                       574          1          -    Covered              
    Coverpoint tx_cp                                  100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                      2877          1          -    Covered              
        bin auto[1]                                       124          1          -    Covered              
    Cross din_cross_rx                                100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin din_values_rx_high                        574          1          -    Covered              
    Cross din_cross_tx                                100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin rd_data_tx_high                           124          1          -    Covered              

TOTAL COVERGROUP COVERAGE: 98.57%  COVERGROUP TYPES: 2

DIRECTIVE COVERAGE:
--------------------------------------------------------------------------------------------
Name                                     Design Design   Lang File(Line)      Hits Status    
                                         Unit   UnitType                                     
--------------------------------------------------------------------------------------------
/top/DUT/SLAVE_instance/cp_1             SLAVE  Verilog  SVA  ../SPI/SPI_slave.sv(169)
                                                                               153 Covered   
/top/DUT/SLAVE_instance/cp_2             SLAVE  Verilog  SVA  ../SPI/SPI_slave.sv(171)
                                                                               204 Covered   
/top/DUT/SLAVE_instance/cp_3             SLAVE  Verilog  SVA  ../SPI/SPI_slave.sv(173)
                                                                               203 Covered   
/top/DUT/SLAVE_instance/cp_4             SLAVE  Verilog  SVA  ../SPI/SPI_slave.sv(175)
                                                                              1124 Covered   
/top/DUT/SLAVE_instance/cp_5             SLAVE  Verilog  SVA  ../SPI/SPI_slave.sv(177)
                                                                               278 Covered   
/top/DUT/SLAVE_instance/cp_6             SLAVE  Verilog  SVA  ../SPI/SPI_slave.sv(179)
                                                                               757 Covered   
/top/DUT/RAM_instance/sva_inst/reset_cov RAM_sva Verilog  SVA  ../RAM/RAM_sva.sv(29)
                                                                                31 Covered   
/top/DUT/RAM_instance/sva_inst/tx_low_cov 
                                         RAM_sva Verilog  SVA  ../RAM/RAM_sva.sv(32)
                                                                              2152 Covered   
/top/DUT/RAM_instance/sva_inst/tx_rise_fall_cov 
                                         RAM_sva Verilog  SVA  ../RAM/RAM_sva.sv(35)
                                                                               620 Covered   
/top/DUT/RAM_instance/sva_inst/wraddr_wrdata_cov 
                                         RAM_sva Verilog  SVA  ../RAM/RAM_sva.sv(38)
                                                                               557 Covered   
/top/DUT/RAM_instance/sva_inst/rdaddr_rddata_cov 
                                         RAM_sva Verilog  SVA  ../RAM/RAM_sva.sv(41)
                                                                               361 Covered   

TOTAL DIRECTIVE COVERAGE: 100.00%  COVERS: 11

ASSERTION RESULTS:
--------------------------------------------------------------------
Name                 File(Line)                   Failure      Pass 
                                                  Count        Count
--------------------------------------------------------------------
/top/DUT/SLAVE_instance/a_reset
                     ../SPI/SPI_slave.sv(167)           0          0
/top/DUT/SLAVE_instance/ap_1
                     ../SPI/SPI_slave.sv(168)           0          1
/top/DUT/SLAVE_instance/ap_2
                     ../SPI/SPI_slave.sv(170)           0          1
/top/DUT/SLAVE_instance/ap_3
                     ../SPI/SPI_slave.sv(172)           0          1
/top/DUT/SLAVE_instance/ap_4
                     ../SPI/SPI_slave.sv(174)           0          1
/top/DUT/SLAVE_instance/ap_5
                     ../SPI/SPI_slave.sv(176)           0          1
/top/DUT/SLAVE_instance/ap_6
                     ../SPI/SPI_slave.sv(178)           0          1
/top/DUT/RAM_instance/sva_inst/reset_asrt
                     ../RAM/RAM_sva.sv(28)              0          1
/top/DUT/RAM_instance/sva_inst/tx_low_asrt
                     ../RAM/RAM_sva.sv(31)              0          1
/top/DUT/RAM_instance/sva_inst/tx_rise_fall_asrt
                     ../RAM/RAM_sva.sv(34)              0          1
/top/DUT/RAM_instance/sva_inst/wraddr_wrdata_asrt
                     ../RAM/RAM_sva.sv(37)              0          1
/top/DUT/RAM_instance/sva_inst/rdaddr_rddata_asrt
                     ../RAM/RAM_sva.sv(40)              0          1
/WRAPPER_read_only_seq_pkg/WRAPPER_read_only_seq/body/#ublk#61782279#15/immed__19
                     WRAPPER_read_only_seq.sv(19)
                                                        0          1
/WRAPPER_write_only_seq_pkg/WRAPPER_write_only_seq/body/#ublk#254679815#19/immed__24
                     WRAPPER_write_only_seq.sv(24)
                                                        0          1
/WRAPPER_write_read_seq_pkg/WRAPPER_write_read_seq/body/#ublk#264526855#15/immed__19
                     WRAPPER_write_read_seq.sv(19)
                                                        0          1

Total Coverage By Instance (filtered view): 83.84%

